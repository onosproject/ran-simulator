/*
Copyright 2019-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.indexedmap.service;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

// Map snapshot
message MapSnapshot {
    uint64 index = 1;
    repeated MapEntryValue entries = 2;
    repeated Listener listeners = 3;
}

// Listener is an indexedmap listener
message Listener {
    uint64 session_id = 1;
    uint64 stream_id = 2;
    string key = 3;
    uint64 index = 4;
}

// Map entry value
message MapEntryValue {
    uint64 index = 1;
    string key = 2;
    uint64 version = 3;
    bytes value = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Duration ttl = 7 [(gogoproto.customname) = "TTL", (gogoproto.stdduration) = true];
}

message ContainsKeyRequest {
    string key = 1;
}

message ContainsKeyResponse {
    bool contains_key = 1;
}

message SizeRequest {

}

message SizeResponse {
    uint32 size = 1;
}

message KeysRequest {

}

message KeysResponse {
    string key = 1;
}

message EntriesRequest {

}

message EntriesResponse {
    string key = 1;
    uint64 index = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message PutRequest {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Duration ttl = 5 [(gogoproto.customname) = "TTL", (gogoproto.stdduration) = true];
    bool if_empty = 6;
}

message PutResponse {
    UpdateStatus status = 1;
    uint64 index = 2;
    string key = 3;
    bytes previous_value = 4;
    uint64 previous_version = 5;
    uint64 new_version = 6;
    google.protobuf.Timestamp created = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message ReplaceRequest {
    uint64 index = 1;
    string key = 2;
    bytes previous_value = 3;
    uint64 previous_version = 4;
    bytes new_value = 5;
    google.protobuf.Duration ttl = 6 [(gogoproto.customname) = "TTL", (gogoproto.stdduration) = true];
}

message ReplaceResponse {
    UpdateStatus status = 1;
    uint64 index = 2;
    string key = 3;
    bytes previous_value = 4;
    uint64 previous_version = 5;
    uint64 new_version = 6;
    google.protobuf.Timestamp created = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message GetRequest {
    uint64 index = 1;
    string key = 2;
}

message GetResponse {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message FirstEntryRequest {
}

message FirstEntryResponse {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message LastEntryRequest {
}

message LastEntryResponse {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message PrevEntryRequest {
    uint64 index = 1;
}

message PrevEntryResponse {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message NextEntryRequest {
    uint64 index = 1;
}

message NextEntryResponse {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
    google.protobuf.Timestamp created = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message RemoveRequest {
    uint64 index = 1;
    string key = 2;
    bytes value = 3;
    uint64 version = 4;
}

message RemoveResponse {
    UpdateStatus status = 1;
    uint64 index = 2;
    string key = 3;
    bytes previous_value = 4;
    uint64 previous_version = 5;
    google.protobuf.Timestamp created = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message ClearRequest {
}

message ClearResponse {
}

message ListenRequest {
    bool replay = 1;
    string key = 2;
    uint64 index = 3;
}

message ListenResponse {
    Type type = 1;
    uint64 index = 2;
    string key = 3;
    bytes value = 4;
    uint64 version = 5;
    google.protobuf.Timestamp created = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp updated = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    int64 stream_id = 8;

    enum Type {
        NONE = 0;
        INSERTED = 1;
        UPDATED = 2;
        REMOVED = 3;
    }
}

message UnlistenRequest {
    uint64 stream_id = 1;
}

message UnlistenResponse {
}

enum UpdateStatus {
    OK = 0;
    NOOP = 1;
    WRITE_LOCK = 2;
    PRECONDITION_FAILED = 3;
}
