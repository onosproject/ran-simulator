/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.membership;

import "gogoproto/gogo.proto";

// Membership group identifier
message GroupId {
    string name = 1;
    string namespace = 2;
}

// Member identifier
message MemberId {
    string name = 1;
    string namespace = 2;
}

// Member is a membership member
message Member {
    MemberId id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];
    string host = 2;
    int32 port = 3;
}

// JoinGroupRequest is a request to join a membership group
message JoinGroupRequest {
    Member member = 1;
    GroupId group_id = 2 [(gogoproto.customname) = "GroupID", (gogoproto.nullable) = false];
}

// JoinGroupResponse is a response to joining a membership group
message JoinGroupResponse {
    GroupId group_id = 1 [(gogoproto.customname) = "GroupID", (gogoproto.nullable) = false];
    repeated Member members = 2 [(gogoproto.nullable) = false];
}

// Atomix membership service
service MembershipService {
    // Joins a member to a cluster
    rpc JoinGroup (JoinGroupRequest) returns (stream JoinGroupResponse);
}