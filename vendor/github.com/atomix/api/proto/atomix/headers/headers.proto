syntax = "proto3";

package atomix.headers;

import "atomix/primitive/primitive.proto";
import "gogoproto/gogo.proto";

message RequestHeader {
    uint32 partition = 6;
    atomix.primitive.PrimitiveId primitive = 1 [(gogoproto.nullable) = false];
    uint64 session_id = 2 [(gogoproto.customname) = "SessionID"];
    uint64 request_id = 3 [(gogoproto.customname) = "RequestID"];
    uint64 index = 4;
    repeated StreamHeader streams = 5 [(gogoproto.nullable) = false];
}

message ResponseHeader {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID"];
    uint64 stream_id = 2 [(gogoproto.customname) = "StreamID"];
    uint64 response_id = 3 [(gogoproto.customname) = "ResponseID"];
    uint64 index = 4;
    string leader = 5;
    ResponseStatus status = 6;
    ResponseType type = 7;
    string message = 8;
}

enum ResponseType {
    RESPONSE = 0;
    OPEN_STREAM = 1;
    CLOSE_STREAM = 2;
}

enum ResponseStatus {
    OK = 0;
    ERROR = 1;
    NOT_LEADER = 2;
    UNKNOWN = 3;
    CANCELED = 4;
    NOT_FOUND = 5;
    ALREADY_EXISTS = 6;
    UNAUTHORIZED = 7;
    FORBIDDEN = 8;
    CONFLICT = 9;
    INVALID = 10;
    UNAVAILABLE = 11;
    NOT_SUPPORTED = 12;
    TIMEOUT = 13;
    INTERNAL = 14;
}

message StreamHeader {
    uint64 stream_id = 1 [(gogoproto.customname) = "StreamID"];
    uint64 response_id = 2 [(gogoproto.customname) = "ResponseID"];
}
