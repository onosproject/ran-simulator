// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: e2sm_kpm_v2/v2/e2sm_kpm_v2.proto

// It is KPM 2.0.1 SM

package e2sm_kpm_ies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2sm_kpm_v2.asn1:82
type SUM int32

const (
	SUM_SUM_TRUE SUM = 0
)

// Enum value maps for SUM.
var (
	SUM_name = map[int32]string{
		0: "SUM_TRUE",
	}
	SUM_value = map[string]int32{
		"SUM_TRUE": 0,
	}
)

func (x SUM) Enum() *SUM {
	p := new(SUM)
	*p = x
	return p
}

func (x SUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SUM) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[0].Descriptor()
}

func (SUM) Type() protoreflect.EnumType {
	return &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[0]
}

func (x SUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SUM.Descriptor instead.
func (SUM) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2sm_kpm_v2.asn1:86
type PreLabelOverride int32

const (
	PreLabelOverride_PRE_LABEL_OVERRIDE_TRUE PreLabelOverride = 0
)

// Enum value maps for PreLabelOverride.
var (
	PreLabelOverride_name = map[int32]string{
		0: "PRE_LABEL_OVERRIDE_TRUE",
	}
	PreLabelOverride_value = map[string]int32{
		"PRE_LABEL_OVERRIDE_TRUE": 0,
	}
)

func (x PreLabelOverride) Enum() *PreLabelOverride {
	p := new(PreLabelOverride)
	*p = x
	return p
}

func (x PreLabelOverride) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreLabelOverride) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[1].Descriptor()
}

func (PreLabelOverride) Type() protoreflect.EnumType {
	return &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[1]
}

func (x PreLabelOverride) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreLabelOverride.Descriptor instead.
func (PreLabelOverride) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2sm_kpm_v2.asn1:87
type StartEndInd int32

const (
	StartEndInd_START_END_IND_START StartEndInd = 0
	StartEndInd_START_END_IND_END   StartEndInd = 1
)

// Enum value maps for StartEndInd.
var (
	StartEndInd_name = map[int32]string{
		0: "START_END_IND_START",
		1: "START_END_IND_END",
	}
	StartEndInd_value = map[string]int32{
		"START_END_IND_START": 0,
		"START_END_IND_END":   1,
	}
)

func (x StartEndInd) Enum() *StartEndInd {
	p := new(StartEndInd)
	*p = x
	return p
}

func (x StartEndInd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartEndInd) Descriptor() protoreflect.EnumDescriptor {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[2].Descriptor()
}

func (StartEndInd) Type() protoreflect.EnumType {
	return &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes[2]
}

func (x StartEndInd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartEndInd.Descriptor instead.
func (StartEndInd) EnumDescriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{2}
}

// sequence from e2sm_kpm_ies_v2.asn:24
type Eutracgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity      *PlmnIdentity      `protobuf:"bytes,1,opt,name=p_lmn_identity,json=EUTRACGI:pLMN_Identity,proto3" json:"p_lmn_identity,omitempty"`
	EUtracellIdentity *EutracellIdentity `protobuf:"bytes,2,opt,name=e_utracell_identity,json=EUTRACGI:eUTRACellIdentity,proto3" json:"e_utracell_identity,omitempty"`
}

func (x *Eutracgi) Reset() {
	*x = Eutracgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eutracgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eutracgi) ProtoMessage() {}

func (x *Eutracgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eutracgi.ProtoReflect.Descriptor instead.
func (*Eutracgi) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{0}
}

func (x *Eutracgi) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Eutracgi) GetEUtracellIdentity() *EutracellIdentity {
	if x != nil {
		return x.EUtracellIdentity
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:30
type Nrcgi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity   *PlmnIdentity   `protobuf:"bytes,1,opt,name=p_lmn_identity,json=NRCGI:pLMN_Identity,proto3" json:"p_lmn_identity,omitempty"`
	NRcellIdentity *NrcellIdentity `protobuf:"bytes,2,opt,name=n_rcell_identity,json=NRCGI:nRCellIdentity,proto3" json:"n_rcell_identity,omitempty"`
}

func (x *Nrcgi) Reset() {
	*x = Nrcgi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nrcgi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nrcgi) ProtoMessage() {}

func (x *Nrcgi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nrcgi.ProtoReflect.Descriptor instead.
func (*Nrcgi) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{1}
}

func (x *Nrcgi) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *Nrcgi) GetNRcellIdentity() *NrcellIdentity {
	if x != nil {
		return x.NRcellIdentity
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:36
type CellGlobalId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:36
	//
	// Types that are assignable to CellGlobalId:
	//	*CellGlobalId_NrCgi
	//	*CellGlobalId_EUtraCgi
	CellGlobalId isCellGlobalId_CellGlobalId `protobuf_oneof:"cell_global_id"`
}

func (x *CellGlobalId) Reset() {
	*x = CellGlobalId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellGlobalId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellGlobalId) ProtoMessage() {}

func (x *CellGlobalId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellGlobalId.ProtoReflect.Descriptor instead.
func (*CellGlobalId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{2}
}

func (m *CellGlobalId) GetCellGlobalId() isCellGlobalId_CellGlobalId {
	if m != nil {
		return m.CellGlobalId
	}
	return nil
}

func (x *CellGlobalId) GetNrCgi() *Nrcgi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_NrCgi); ok {
		return x.NrCgi
	}
	return nil
}

func (x *CellGlobalId) GetEUtraCgi() *Eutracgi {
	if x, ok := x.GetCellGlobalId().(*CellGlobalId_EUtraCgi); ok {
		return x.EUtraCgi
	}
	return nil
}

type isCellGlobalId_CellGlobalId interface {
	isCellGlobalId_CellGlobalId()
}

type CellGlobalId_NrCgi struct {
	NrCgi *Nrcgi `protobuf:"bytes,1,opt,name=nr_cgi,json=CellGlobalID:nr_CGI,proto3,oneof"`
}

type CellGlobalId_EUtraCgi struct {
	EUtraCgi *Eutracgi `protobuf:"bytes,2,opt,name=e_utra_cgi,json=CellGlobalID:eUTRA_CGI,proto3,oneof"`
}

func (*CellGlobalId_NrCgi) isCellGlobalId_CellGlobalId() {}

func (*CellGlobalId_EUtraCgi) isCellGlobalId_CellGlobalId() {}

// sequence from e2sm_kpm_ies_v2.asn:42
type Snssai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SSt []byte `protobuf:"bytes,1,opt,name=s_st,json=SNSSAI:sST,proto3" json:"s_st,omitempty"`
	SD  []byte `protobuf:"bytes,2,opt,name=s_d,json=SNSSAI:sD,proto3" json:"s_d,omitempty"`
}

func (x *Snssai) Reset() {
	*x = Snssai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snssai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snssai) ProtoMessage() {}

func (x *Snssai) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snssai.ProtoReflect.Descriptor instead.
func (*Snssai) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{3}
}

func (x *Snssai) GetSSt() []byte {
	if x != nil {
		return x.SSt
	}
	return nil
}

func (x *Snssai) GetSD() []byte {
	if x != nil {
		return x.SD
	}
	return nil
}

// range of Integer from e2sm_kpm_ies_v2.asn:47
type FiveQi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=FiveQI:value,proto3" json:"value,omitempty"`
}

func (x *FiveQi) Reset() {
	*x = FiveQi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiveQi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiveQi) ProtoMessage() {}

func (x *FiveQi) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiveQi.ProtoReflect.Descriptor instead.
func (*FiveQi) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{4}
}

func (x *FiveQi) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:49
type Qci struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=QCI:value,proto3" json:"value,omitempty"`
}

func (x *Qci) Reset() {
	*x = Qci{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qci) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qci) ProtoMessage() {}

func (x *Qci) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qci.ProtoReflect.Descriptor instead.
func (*Qci) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{5}
}

func (x *Qci) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:51
type Arp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=ARP:value,proto3" json:"value,omitempty"`
}

func (x *Arp) Reset() {
	*x = Arp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Arp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arp) ProtoMessage() {}

func (x *Arp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arp.ProtoReflect.Descriptor instead.
func (*Arp) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{6}
}

func (x *Arp) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:61
type GranularityPeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=GranularityPeriod:value,proto3" json:"value,omitempty"`
}

func (x *GranularityPeriod) Reset() {
	*x = GranularityPeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranularityPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranularityPeriod) ProtoMessage() {}

func (x *GranularityPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranularityPeriod.ProtoReflect.Descriptor instead.
func (*GranularityPeriod) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{7}
}

func (x *GranularityPeriod) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:62
type MeasurementType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:62
	//
	// Types that are assignable to MeasurementType:
	//	*MeasurementType_MeasName
	//	*MeasurementType_MeasId
	MeasurementType isMeasurementType_MeasurementType `protobuf_oneof:"measurement_type"`
}

func (x *MeasurementType) Reset() {
	*x = MeasurementType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementType) ProtoMessage() {}

func (x *MeasurementType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementType.ProtoReflect.Descriptor instead.
func (*MeasurementType) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{8}
}

func (m *MeasurementType) GetMeasurementType() isMeasurementType_MeasurementType {
	if m != nil {
		return m.MeasurementType
	}
	return nil
}

func (x *MeasurementType) GetMeasName() *MeasurementTypeName {
	if x, ok := x.GetMeasurementType().(*MeasurementType_MeasName); ok {
		return x.MeasName
	}
	return nil
}

func (x *MeasurementType) GetMeasId() *MeasurementTypeId {
	if x, ok := x.GetMeasurementType().(*MeasurementType_MeasId); ok {
		return x.MeasId
	}
	return nil
}

type isMeasurementType_MeasurementType interface {
	isMeasurementType_MeasurementType()
}

type MeasurementType_MeasName struct {
	MeasName *MeasurementTypeName `protobuf:"bytes,1,opt,name=meas_name,json=MeasurementType:measName,proto3,oneof"`
}

type MeasurementType_MeasId struct {
	MeasId *MeasurementTypeId `protobuf:"bytes,2,opt,name=meas_id,json=MeasurementType:measID,proto3,oneof"`
}

func (*MeasurementType_MeasName) isMeasurementType_MeasurementType() {}

func (*MeasurementType_MeasId) isMeasurementType_MeasurementType() {}

// range of Integer from e2sm_kpm_ies_v2.asn:69
type MeasurementTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MeasurementTypeID:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementTypeId) Reset() {
	*x = MeasurementTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeId) ProtoMessage() {}

func (x *MeasurementTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeId.ProtoReflect.Descriptor instead.
func (*MeasurementTypeId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{9}
}

func (x *MeasurementTypeId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:72
type MeasurementLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId           *PlmnIdentity    `protobuf:"bytes,1,opt,name=plmn_id,json=MeasurementLabel:plmnID,proto3" json:"plmn_id,omitempty"`
	SliceId          *Snssai          `protobuf:"bytes,2,opt,name=slice_id,json=MeasurementLabel:sliceID,proto3" json:"slice_id,omitempty"`
	FiveQi           *FiveQi          `protobuf:"bytes,3,opt,name=five_qi,json=MeasurementLabel:fiveQI,proto3" json:"five_qi,omitempty"`
	QCi              *Qci             `protobuf:"bytes,4,opt,name=q_ci,json=MeasurementLabel:qCI,proto3" json:"q_ci,omitempty"`
	QCimax           *Qci             `protobuf:"bytes,5,opt,name=q_cimax,json=MeasurementLabel:qCImax,proto3" json:"q_cimax,omitempty"`
	QCimin           *Qci             `protobuf:"bytes,6,opt,name=q_cimin,json=MeasurementLabel:qCImin,proto3" json:"q_cimin,omitempty"`
	ARpmax           *Arp             `protobuf:"bytes,7,opt,name=a_rpmax,json=MeasurementLabel:aRPmax,proto3" json:"a_rpmax,omitempty"`
	ARpmin           *Arp             `protobuf:"bytes,8,opt,name=a_rpmin,json=MeasurementLabel:aRPmin,proto3" json:"a_rpmin,omitempty"`
	BitrateRange     int32            `protobuf:"varint,9,opt,name=bitrate_range,json=MeasurementLabel:bitrateRange,proto3" json:"bitrate_range,omitempty"`
	LayerMuMimo      int32            `protobuf:"varint,10,opt,name=layer_mu_mimo,json=MeasurementLabel:layerMU_MIMO,proto3" json:"layer_mu_mimo,omitempty"`
	SUm              SUM              `protobuf:"varint,11,opt,name=s_um,json=MeasurementLabel:sUM,proto3,enum=e2sm_kpm_v2.v2.SUM" json:"s_um,omitempty"`
	DistBinX         int32            `protobuf:"varint,12,opt,name=dist_bin_x,json=MeasurementLabel:distBinX,proto3" json:"dist_bin_x,omitempty"`
	DistBinY         int32            `protobuf:"varint,13,opt,name=dist_bin_y,json=MeasurementLabel:distBinY,proto3" json:"dist_bin_y,omitempty"`
	DistBinZ         int32            `protobuf:"varint,14,opt,name=dist_bin_z,json=MeasurementLabel:distBinZ,proto3" json:"dist_bin_z,omitempty"`
	PreLabelOverride PreLabelOverride `protobuf:"varint,15,opt,name=pre_label_override,json=MeasurementLabel:preLabelOverride,proto3,enum=e2sm_kpm_v2.v2.PreLabelOverride" json:"pre_label_override,omitempty"`
	StartEndInd      StartEndInd      `protobuf:"varint,16,opt,name=start_end_ind,json=MeasurementLabel:startEndInd,proto3,enum=e2sm_kpm_v2.v2.StartEndInd" json:"start_end_ind,omitempty"`
}

func (x *MeasurementLabel) Reset() {
	*x = MeasurementLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementLabel) ProtoMessage() {}

func (x *MeasurementLabel) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementLabel.ProtoReflect.Descriptor instead.
func (*MeasurementLabel) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{10}
}

func (x *MeasurementLabel) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *MeasurementLabel) GetSliceId() *Snssai {
	if x != nil {
		return x.SliceId
	}
	return nil
}

func (x *MeasurementLabel) GetFiveQi() *FiveQi {
	if x != nil {
		return x.FiveQi
	}
	return nil
}

func (x *MeasurementLabel) GetQCi() *Qci {
	if x != nil {
		return x.QCi
	}
	return nil
}

func (x *MeasurementLabel) GetQCimax() *Qci {
	if x != nil {
		return x.QCimax
	}
	return nil
}

func (x *MeasurementLabel) GetQCimin() *Qci {
	if x != nil {
		return x.QCimin
	}
	return nil
}

func (x *MeasurementLabel) GetARpmax() *Arp {
	if x != nil {
		return x.ARpmax
	}
	return nil
}

func (x *MeasurementLabel) GetARpmin() *Arp {
	if x != nil {
		return x.ARpmin
	}
	return nil
}

func (x *MeasurementLabel) GetBitrateRange() int32 {
	if x != nil {
		return x.BitrateRange
	}
	return 0
}

func (x *MeasurementLabel) GetLayerMuMimo() int32 {
	if x != nil {
		return x.LayerMuMimo
	}
	return 0
}

func (x *MeasurementLabel) GetSUm() SUM {
	if x != nil {
		return x.SUm
	}
	return SUM_SUM_TRUE
}

func (x *MeasurementLabel) GetDistBinX() int32 {
	if x != nil {
		return x.DistBinX
	}
	return 0
}

func (x *MeasurementLabel) GetDistBinY() int32 {
	if x != nil {
		return x.DistBinY
	}
	return 0
}

func (x *MeasurementLabel) GetDistBinZ() int32 {
	if x != nil {
		return x.DistBinZ
	}
	return 0
}

func (x *MeasurementLabel) GetPreLabelOverride() PreLabelOverride {
	if x != nil {
		return x.PreLabelOverride
	}
	return PreLabelOverride_PRE_LABEL_OVERRIDE_TRUE
}

func (x *MeasurementLabel) GetStartEndInd() StartEndInd {
	if x != nil {
		return x.StartEndInd
	}
	return StartEndInd_START_END_IND_START
}

// range of Integer from e2sm_kpm_ies_v2.asn:91
type SubscriptionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,json=SubscriptionID:value,proto3" json:"value,omitempty"`
}

func (x *SubscriptionId) Reset() {
	*x = SubscriptionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionId) ProtoMessage() {}

func (x *SubscriptionId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionId.ProtoReflect.Descriptor instead.
func (*SubscriptionId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{11}
}

func (x *SubscriptionId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:96
type GlobalKpmnodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:96
	//
	// Types that are assignable to GlobalKpmnodeId:
	//	*GlobalKpmnodeId_GNb
	//	*GlobalKpmnodeId_EnGNb
	//	*GlobalKpmnodeId_NgENb
	//	*GlobalKpmnodeId_ENb
	GlobalKpmnodeId isGlobalKpmnodeId_GlobalKpmnodeId `protobuf_oneof:"global_kpmnode_id"`
}

func (x *GlobalKpmnodeId) Reset() {
	*x = GlobalKpmnodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalKpmnodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalKpmnodeId) ProtoMessage() {}

func (x *GlobalKpmnodeId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalKpmnodeId.ProtoReflect.Descriptor instead.
func (*GlobalKpmnodeId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{12}
}

func (m *GlobalKpmnodeId) GetGlobalKpmnodeId() isGlobalKpmnodeId_GlobalKpmnodeId {
	if m != nil {
		return m.GlobalKpmnodeId
	}
	return nil
}

func (x *GlobalKpmnodeId) GetGNb() *GlobalKpmnodeGnbId {
	if x, ok := x.GetGlobalKpmnodeId().(*GlobalKpmnodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalKpmnodeId) GetEnGNb() *GlobalKpmnodeEnGnbId {
	if x, ok := x.GetGlobalKpmnodeId().(*GlobalKpmnodeId_EnGNb); ok {
		return x.EnGNb
	}
	return nil
}

func (x *GlobalKpmnodeId) GetNgENb() *GlobalKpmnodeNgEnbId {
	if x, ok := x.GetGlobalKpmnodeId().(*GlobalKpmnodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

func (x *GlobalKpmnodeId) GetENb() *GlobalKpmnodeEnbId {
	if x, ok := x.GetGlobalKpmnodeId().(*GlobalKpmnodeId_ENb); ok {
		return x.ENb
	}
	return nil
}

type isGlobalKpmnodeId_GlobalKpmnodeId interface {
	isGlobalKpmnodeId_GlobalKpmnodeId()
}

type GlobalKpmnodeId_GNb struct {
	GNb *GlobalKpmnodeGnbId `protobuf:"bytes,1,opt,name=g_nb,json=GlobalKPMnode-ID:gNB,proto3,oneof"`
}

type GlobalKpmnodeId_EnGNb struct {
	EnGNb *GlobalKpmnodeEnGnbId `protobuf:"bytes,2,opt,name=en_g_nb,json=GlobalKPMnode-ID:en_gNB,proto3,oneof"`
}

type GlobalKpmnodeId_NgENb struct {
	NgENb *GlobalKpmnodeNgEnbId `protobuf:"bytes,3,opt,name=ng_e_nb,json=GlobalKPMnode-ID:ng_eNB,proto3,oneof"`
}

type GlobalKpmnodeId_ENb struct {
	ENb *GlobalKpmnodeEnbId `protobuf:"bytes,4,opt,name=e_nb,json=GlobalKPMnode-ID:eNB,proto3,oneof"`
}

func (*GlobalKpmnodeId_GNb) isGlobalKpmnodeId_GlobalKpmnodeId() {}

func (*GlobalKpmnodeId_EnGNb) isGlobalKpmnodeId_GlobalKpmnodeId() {}

func (*GlobalKpmnodeId_NgENb) isGlobalKpmnodeId_GlobalKpmnodeId() {}

func (*GlobalKpmnodeId_ENb) isGlobalKpmnodeId_GlobalKpmnodeId() {}

// sequence from e2sm_kpm_ies_v2.asn:104
type GlobalKpmnodeGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalGNbId *GlobalgNbId `protobuf:"bytes,1,opt,name=global_g_nb_id,json=GlobalKPMnode-gNB-ID:global_gNB_ID,proto3" json:"global_g_nb_id,omitempty"`
	GNbCuUpId   *GnbCuUpId   `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=GlobalKPMnode-gNB-ID:gNB_CU_UP_ID,proto3" json:"g_nb_cu_up_id,omitempty"`
	GNbDuId     *GnbDuId     `protobuf:"bytes,3,opt,name=g_nb_du_id,json=GlobalKPMnode-gNB-ID:gNB_DU_ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalKpmnodeGnbId) Reset() {
	*x = GlobalKpmnodeGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalKpmnodeGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalKpmnodeGnbId) ProtoMessage() {}

func (x *GlobalKpmnodeGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalKpmnodeGnbId.ProtoReflect.Descriptor instead.
func (*GlobalKpmnodeGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{13}
}

func (x *GlobalKpmnodeGnbId) GetGlobalGNbId() *GlobalgNbId {
	if x != nil {
		return x.GlobalGNbId
	}
	return nil
}

func (x *GlobalKpmnodeGnbId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

func (x *GlobalKpmnodeGnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:111
type GlobalgNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=GlobalgNB-ID:plmn_id,proto3" json:"plmn_id,omitempty"`
	GnbId  *GnbIdChoice  `protobuf:"bytes,2,opt,name=gnb_id,json=GlobalgNB-ID:gnb_id,proto3" json:"gnb_id,omitempty"`
}

func (x *GlobalgNbId) Reset() {
	*x = GlobalgNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalgNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalgNbId) ProtoMessage() {}

func (x *GlobalgNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalgNbId.ProtoReflect.Descriptor instead.
func (*GlobalgNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{14}
}

func (x *GlobalgNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalgNbId) GetGnbId() *GnbIdChoice {
	if x != nil {
		return x.GnbId
	}
	return nil
}

// range of Integer from e2sm_kpm_ies_v2.asn:116
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,json=GNB-CU-UP-ID:value,proto3" json:"value,omitempty"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{15}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:118
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,json=GNB-DU-ID:value,proto3" json:"value,omitempty"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{16}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:121
type GnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:121
	//
	// Types that are assignable to GnbIdChoice:
	//	*GnbIdChoice_GnbId
	GnbIdChoice isGnbIdChoice_GnbIdChoice `protobuf_oneof:"gnb_id_choice"`
}

func (x *GnbIdChoice) Reset() {
	*x = GnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbIdChoice) ProtoMessage() {}

func (x *GnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbIdChoice.ProtoReflect.Descriptor instead.
func (*GnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{17}
}

func (m *GnbIdChoice) GetGnbIdChoice() isGnbIdChoice_GnbIdChoice {
	if m != nil {
		return m.GnbIdChoice
	}
	return nil
}

func (x *GnbIdChoice) GetGnbId() *BitString {
	if x, ok := x.GetGnbIdChoice().(*GnbIdChoice_GnbId); ok {
		return x.GnbId
	}
	return nil
}

type isGnbIdChoice_GnbIdChoice interface {
	isGnbIdChoice_GnbIdChoice()
}

type GnbIdChoice_GnbId struct {
	GnbId *BitString `protobuf:"bytes,1,opt,name=gnb_id,json=GNB-ID-Choice:gnb_ID,proto3,oneof"`
}

func (*GnbIdChoice_GnbId) isGnbIdChoice_GnbIdChoice() {}

// sequence from e2sm_kpm_ies_v2.asn:126
type GlobalKpmnodeEnGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalGNbId *GlobalenGnbId `protobuf:"bytes,1,opt,name=global_g_nb_id,json=GlobalKPMnode-en-gNB-ID:global_gNB_ID,proto3" json:"global_g_nb_id,omitempty"`
	GNbCuUpId   *GnbCuUpId     `protobuf:"bytes,2,opt,name=g_nb_cu_up_id,json=GlobalKPMnode-en-gNB-ID:gNB_CU_UP_ID,proto3" json:"g_nb_cu_up_id,omitempty"`
	GNbDuId     *GnbDuId       `protobuf:"bytes,3,opt,name=g_nb_du_id,json=GlobalKPMnode-en-gNB-ID:gNB_DU_ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalKpmnodeEnGnbId) Reset() {
	*x = GlobalKpmnodeEnGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalKpmnodeEnGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalKpmnodeEnGnbId) ProtoMessage() {}

func (x *GlobalKpmnodeEnGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalKpmnodeEnGnbId.ProtoReflect.Descriptor instead.
func (*GlobalKpmnodeEnGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{18}
}

func (x *GlobalKpmnodeEnGnbId) GetGlobalGNbId() *GlobalenGnbId {
	if x != nil {
		return x.GlobalGNbId
	}
	return nil
}

func (x *GlobalKpmnodeEnGnbId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

func (x *GlobalKpmnodeEnGnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:133
type GlobalenGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=GlobalenGNB-ID:pLMN_Identity,proto3" json:"p_lmn_identity,omitempty"`
	GNbId        *EngnbId      `protobuf:"bytes,2,opt,name=g_nb_id,json=GlobalenGNB-ID:gNB_ID,proto3" json:"g_nb_id,omitempty"`
}

func (x *GlobalenGnbId) Reset() {
	*x = GlobalenGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbId) ProtoMessage() {}

func (x *GlobalenGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbId.ProtoReflect.Descriptor instead.
func (*GlobalenGnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{19}
}

func (x *GlobalenGnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbId) GetGNbId() *EngnbId {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:139
type EngnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:139
	//
	// Types that are assignable to EngnbId:
	//	*EngnbId_GNbId
	EngnbId isEngnbId_EngnbId `protobuf_oneof:"engnb_id"`
}

func (x *EngnbId) Reset() {
	*x = EngnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngnbId) ProtoMessage() {}

func (x *EngnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngnbId.ProtoReflect.Descriptor instead.
func (*EngnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{20}
}

func (m *EngnbId) GetEngnbId() isEngnbId_EngnbId {
	if m != nil {
		return m.EngnbId
	}
	return nil
}

func (x *EngnbId) GetGNbId() *BitString {
	if x, ok := x.GetEngnbId().(*EngnbId_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isEngnbId_EngnbId interface {
	isEngnbId_EngnbId()
}

type EngnbId_GNbId struct {
	GNbId *BitString `protobuf:"bytes,1,opt,name=g_nb_id,json=ENGNB-ID:gNB_ID,proto3,oneof"`
}

func (*EngnbId_GNbId) isEngnbId_EngnbId() {}

// sequence from e2sm_kpm_ies_v2.asn:144
type GlobalKpmnodeNgEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalNgENbId *GlobalngeNbId `protobuf:"bytes,1,opt,name=global_ng_e_nb_id,json=GlobalKPMnode-ng-eNB-ID:global_ng_eNB_ID,proto3" json:"global_ng_e_nb_id,omitempty"`
	GNbDuId       *GnbDuId       `protobuf:"bytes,2,opt,name=g_nb_du_id,json=GlobalKPMnode-ng-eNB-ID:gNB_DU_ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *GlobalKpmnodeNgEnbId) Reset() {
	*x = GlobalKpmnodeNgEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalKpmnodeNgEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalKpmnodeNgEnbId) ProtoMessage() {}

func (x *GlobalKpmnodeNgEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalKpmnodeNgEnbId.ProtoReflect.Descriptor instead.
func (*GlobalKpmnodeNgEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{21}
}

func (x *GlobalKpmnodeNgEnbId) GetGlobalNgENbId() *GlobalngeNbId {
	if x != nil {
		return x.GlobalNgENbId
	}
	return nil
}

func (x *GlobalKpmnodeNgEnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:150
type GlobalngeNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId          *PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=GlobalngeNB-ID:plmn_id,proto3" json:"plmn_id,omitempty"`
	EnbId           *EnbIdChoice  `protobuf:"bytes,2,opt,name=enb_id,json=GlobalngeNB-ID:enb_id,proto3" json:"enb_id,omitempty"`
	ShortMacroENbId *BitString    `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=GlobalngeNB-ID:short_Macro_eNB_ID,proto3" json:"short_macro_e_nb_id,omitempty"`
	LongMacroENbId  *BitString    `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=GlobalngeNB-ID:long_Macro_eNB_ID,proto3" json:"long_macro_e_nb_id,omitempty"`
}

func (x *GlobalngeNbId) Reset() {
	*x = GlobalngeNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalngeNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalngeNbId) ProtoMessage() {}

func (x *GlobalngeNbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalngeNbId.ProtoReflect.Descriptor instead.
func (*GlobalngeNbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{22}
}

func (x *GlobalngeNbId) GetPlmnId() *PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalngeNbId) GetEnbId() *EnbIdChoice {
	if x != nil {
		return x.EnbId
	}
	return nil
}

func (x *GlobalngeNbId) GetShortMacroENbId() *BitString {
	if x != nil {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *GlobalngeNbId) GetLongMacroENbId() *BitString {
	if x != nil {
		return x.LongMacroENbId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:158
type EnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:158
	//
	// Types that are assignable to EnbIdChoice:
	//	*EnbIdChoice_EnbIdMacro
	//	*EnbIdChoice_EnbIdShortmacro
	//	*EnbIdChoice_EnbIdLongmacro
	EnbIdChoice isEnbIdChoice_EnbIdChoice `protobuf_oneof:"enb_id_choice"`
}

func (x *EnbIdChoice) Reset() {
	*x = EnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbIdChoice) ProtoMessage() {}

func (x *EnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbIdChoice.ProtoReflect.Descriptor instead.
func (*EnbIdChoice) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{23}
}

func (m *EnbIdChoice) GetEnbIdChoice() isEnbIdChoice_EnbIdChoice {
	if m != nil {
		return m.EnbIdChoice
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdMacro() *BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdMacro); ok {
		return x.EnbIdMacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdShortmacro() *BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdShortmacro); ok {
		return x.EnbIdShortmacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdLongmacro() *BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdLongmacro); ok {
		return x.EnbIdLongmacro
	}
	return nil
}

type isEnbIdChoice_EnbIdChoice interface {
	isEnbIdChoice_EnbIdChoice()
}

type EnbIdChoice_EnbIdMacro struct {
	EnbIdMacro *BitString `protobuf:"bytes,1,opt,name=enb_id_macro,json=ENB-ID-Choice:enb_ID_macro,proto3,oneof"`
}

type EnbIdChoice_EnbIdShortmacro struct {
	EnbIdShortmacro *BitString `protobuf:"bytes,2,opt,name=enb_id_shortmacro,json=ENB-ID-Choice:enb_ID_shortmacro,proto3,oneof"`
}

type EnbIdChoice_EnbIdLongmacro struct {
	EnbIdLongmacro *BitString `protobuf:"bytes,3,opt,name=enb_id_longmacro,json=ENB-ID-Choice:enb_ID_longmacro,proto3,oneof"`
}

func (*EnbIdChoice_EnbIdMacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdShortmacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdLongmacro) isEnbIdChoice_EnbIdChoice() {}

// sequence from e2sm_kpm_ies_v2.asn:165
type GlobalKpmnodeEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalENbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_e_nb_id,json=GlobalKPMnode-eNB-ID:global_eNB_ID,proto3" json:"global_e_nb_id,omitempty"`
}

func (x *GlobalKpmnodeEnbId) Reset() {
	*x = GlobalKpmnodeEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalKpmnodeEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalKpmnodeEnbId) ProtoMessage() {}

func (x *GlobalKpmnodeEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalKpmnodeEnbId.ProtoReflect.Descriptor instead.
func (*GlobalKpmnodeEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{24}
}

func (x *GlobalKpmnodeEnbId) GetGlobalENbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalENbId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:170
type GlobalEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=GlobalENB-ID:pLMN_Identity,proto3" json:"p_lmn_identity,omitempty"`
	ENbId        *EnbId        `protobuf:"bytes,2,opt,name=e_nb_id,json=GlobalENB-ID:eNB_ID,proto3" json:"e_nb_id,omitempty"`
}

func (x *GlobalEnbId) Reset() {
	*x = GlobalEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbId) ProtoMessage() {}

func (x *GlobalEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{25}
}

func (x *GlobalEnbId) GetPLmnIdentity() *PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalEnbId) GetENbId() *EnbId {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:176
type EnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:176
	//
	// Types that are assignable to EnbId:
	//	*EnbId_MacroENbId
	//	*EnbId_HomeENbId
	EnbId isEnbId_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbId) Reset() {
	*x = EnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbId) ProtoMessage() {}

func (x *EnbId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbId.ProtoReflect.Descriptor instead.
func (*EnbId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{26}
}

func (m *EnbId) GetEnbId() isEnbId_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbId) GetMacroENbId() *BitString {
	if x, ok := x.GetEnbId().(*EnbId_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbId) GetHomeENbId() *BitString {
	if x, ok := x.GetEnbId().(*EnbId_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

type isEnbId_EnbId interface {
	isEnbId_EnbId()
}

type EnbId_MacroENbId struct {
	MacroENbId *BitString `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=ENB-ID:macro_eNB_ID,proto3,oneof"`
}

type EnbId_HomeENbId struct {
	HomeENbId *BitString `protobuf:"bytes,2,opt,name=home_e_nb_id,json=ENB-ID:home_eNB_ID,proto3,oneof"`
}

func (*EnbId_MacroENbId) isEnbId_EnbId() {}

func (*EnbId_HomeENbId) isEnbId_EnbId() {}

// sequence from e2sm_kpm_ies_v2.asn:184
type RanfunctionName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionShortName   string `protobuf:"bytes,1,opt,name=ran_function_short_name,json=RANfunction-Name:ranFunction_ShortName,proto3" json:"ran_function_short_name,omitempty"`
	RanFunctionE2SmOid     string `protobuf:"bytes,2,opt,name=ran_function_e2_sm_oid,json=RANfunction-Name:ranFunction_E2SM_OID,proto3" json:"ran_function_e2_sm_oid,omitempty"`
	RanFunctionDescription string `protobuf:"bytes,3,opt,name=ran_function_description,json=RANfunction-Name:ranFunction_Decsription,proto3" json:"ran_function_description,omitempty"`
	RanFunctionInstance    int32  `protobuf:"varint,4,opt,name=ran_function_instance,json=RANfunction-Name:ranFunction_Instance,proto3" json:"ran_function_instance,omitempty"`
}

func (x *RanfunctionName) Reset() {
	*x = RanfunctionName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionName) ProtoMessage() {}

func (x *RanfunctionName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionName.ProtoReflect.Descriptor instead.
func (*RanfunctionName) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{27}
}

func (x *RanfunctionName) GetRanFunctionShortName() string {
	if x != nil {
		return x.RanFunctionShortName
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionE2SmOid() string {
	if x != nil {
		return x.RanFunctionE2SmOid
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionDescription() string {
	if x != nil {
		return x.RanFunctionDescription
	}
	return ""
}

func (x *RanfunctionName) GetRanFunctionInstance() int32 {
	if x != nil {
		return x.RanFunctionInstance
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:193
type RicStyleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=RIC-Style-Type:value,proto3" json:"value,omitempty"`
}

func (x *RicStyleType) Reset() {
	*x = RicStyleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleType) ProtoMessage() {}

func (x *RicStyleType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleType.ProtoReflect.Descriptor instead.
func (*RicStyleType) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{28}
}

func (x *RicStyleType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2sm_kpm_ies_v2.asn:201
type RicFormatType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=RIC-Format-Type:value,proto3" json:"value,omitempty"`
}

func (x *RicFormatType) Reset() {
	*x = RicFormatType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicFormatType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicFormatType) ProtoMessage() {}

func (x *RicFormatType) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicFormatType.ProtoReflect.Descriptor instead.
func (*RicFormatType) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{29}
}

func (x *RicFormatType) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:201
type MaxnoofKpmnodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MaxnoofKPMnodes:value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofKpmnodes) Reset() {
	*x = MaxnoofKpmnodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofKpmnodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofKpmnodes) ProtoMessage() {}

func (x *MaxnoofKpmnodes) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofKpmnodes.ProtoReflect.Descriptor instead.
func (*MaxnoofKpmnodes) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{30}
}

func (x *MaxnoofKpmnodes) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:202
type MaxnoofCells struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MaxnoofCells:value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofCells) Reset() {
	*x = MaxnoofCells{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofCells) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofCells) ProtoMessage() {}

func (x *MaxnoofCells) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofCells.ProtoReflect.Descriptor instead.
func (*MaxnoofCells) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{31}
}

func (x *MaxnoofCells) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:203
type MaxnoofRicstyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MaxnoofRicstyles:value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofRicstyles) Reset() {
	*x = MaxnoofRicstyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofRicstyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofRicstyles) ProtoMessage() {}

func (x *MaxnoofRicstyles) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofRicstyles.ProtoReflect.Descriptor instead.
func (*MaxnoofRicstyles) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{32}
}

func (x *MaxnoofRicstyles) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:204
type MaxnoofMeasurementInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MaxnoofMeasurementInfo:value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementInfo) Reset() {
	*x = MaxnoofMeasurementInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementInfo) ProtoMessage() {}

func (x *MaxnoofMeasurementInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementInfo.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{33}
}

func (x *MaxnoofMeasurementInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:205
type MaxnoofLabelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,json=MaxnoofLabelInfo,proto3" json:"value,omitempty"`
}

func (x *MaxnoofLabelInfo) Reset() {
	*x = MaxnoofLabelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofLabelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofLabelInfo) ProtoMessage() {}

func (x *MaxnoofLabelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofLabelInfo.ProtoReflect.Descriptor instead.
func (*MaxnoofLabelInfo) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{34}
}

func (x *MaxnoofLabelInfo) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:206
type MaxnoofMeasurementRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,json=MaxnoofMeasurementRecord:value,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementRecord) Reset() {
	*x = MaxnoofMeasurementRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementRecord) ProtoMessage() {}

func (x *MaxnoofMeasurementRecord) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementRecord.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementRecord) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{35}
}

func (x *MaxnoofMeasurementRecord) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// constant Integer from e2sm_kpm_ies_v2.asn:207
type MaxnoofMeasurementValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,json=MaxnoofMeasurementValue,proto3" json:"value,omitempty"`
}

func (x *MaxnoofMeasurementValue) Reset() {
	*x = MaxnoofMeasurementValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxnoofMeasurementValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxnoofMeasurementValue) ProtoMessage() {}

func (x *MaxnoofMeasurementValue) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxnoofMeasurementValue.ProtoReflect.Descriptor instead.
func (*MaxnoofMeasurementValue) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{36}
}

func (x *MaxnoofMeasurementValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:211
type MeasurementInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*MeasurementInfoItem `protobuf:"bytes,1,rep,name=value,json=MeasurementInfoList:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementInfoList) Reset() {
	*x = MeasurementInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoList) ProtoMessage() {}

func (x *MeasurementInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoList) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{37}
}

func (x *MeasurementInfoList) GetValue() []*MeasurementInfoItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:212
type MeasurementInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasType      *MeasurementType `protobuf:"bytes,1,opt,name=meas_type,json=MeasurementInfoItem:measType,proto3" json:"meas_type,omitempty"`
	LabelInfoList *LabelInfoList   `protobuf:"bytes,2,opt,name=label_info_list,json=MeasurementInfoItem:labelInfoList,proto3" json:"label_info_list,omitempty"`
}

func (x *MeasurementInfoItem) Reset() {
	*x = MeasurementInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoItem) ProtoMessage() {}

func (x *MeasurementInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{38}
}

func (x *MeasurementInfoItem) GetMeasType() *MeasurementType {
	if x != nil {
		return x.MeasType
	}
	return nil
}

func (x *MeasurementInfoItem) GetLabelInfoList() *LabelInfoList {
	if x != nil {
		return x.LabelInfoList
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:219
type LabelInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*LabelInfoItem `protobuf:"bytes,1,rep,name=value,json=LabelInfoList:value,proto3" json:"value,omitempty"`
}

func (x *LabelInfoList) Reset() {
	*x = LabelInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelInfoList) ProtoMessage() {}

func (x *LabelInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelInfoList.ProtoReflect.Descriptor instead.
func (*LabelInfoList) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{39}
}

func (x *LabelInfoList) GetValue() []*LabelInfoItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:220
type LabelInfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasLabel *MeasurementLabel `protobuf:"bytes,1,opt,name=meas_label,json=LabelInfoItem:measLabel,proto3" json:"meas_label,omitempty"`
}

func (x *LabelInfoItem) Reset() {
	*x = LabelInfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelInfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelInfoItem) ProtoMessage() {}

func (x *LabelInfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelInfoItem.ProtoReflect.Descriptor instead.
func (*LabelInfoItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{40}
}

func (x *LabelInfoItem) GetMeasLabel() *MeasurementLabel {
	if x != nil {
		return x.MeasLabel
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:226
type MeasurementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*MeasurementRecord `protobuf:"bytes,1,rep,name=value,json=MeasurementData:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementData) Reset() {
	*x = MeasurementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementData) ProtoMessage() {}

func (x *MeasurementData) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementData.ProtoReflect.Descriptor instead.
func (*MeasurementData) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{41}
}

func (x *MeasurementData) GetValue() []*MeasurementRecord {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:228
type MeasurementRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*MeasurementRecordItem `protobuf:"bytes,1,rep,name=value,json=MeasurementRecord:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementRecord) Reset() {
	*x = MeasurementRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecord) ProtoMessage() {}

func (x *MeasurementRecord) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecord.ProtoReflect.Descriptor instead.
func (*MeasurementRecord) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{42}
}

func (x *MeasurementRecord) GetValue() []*MeasurementRecordItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:229
type MeasurementRecordItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:229
	//
	// Types that are assignable to MeasurementRecordItem:
	//	*MeasurementRecordItem_Integer
	//	*MeasurementRecordItem_Real
	//	*MeasurementRecordItem_NoValue
	MeasurementRecordItem isMeasurementRecordItem_MeasurementRecordItem `protobuf_oneof:"measurement_record_item"`
}

func (x *MeasurementRecordItem) Reset() {
	*x = MeasurementRecordItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementRecordItem) ProtoMessage() {}

func (x *MeasurementRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementRecordItem.ProtoReflect.Descriptor instead.
func (*MeasurementRecordItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{43}
}

func (m *MeasurementRecordItem) GetMeasurementRecordItem() isMeasurementRecordItem_MeasurementRecordItem {
	if m != nil {
		return m.MeasurementRecordItem
	}
	return nil
}

func (x *MeasurementRecordItem) GetInteger() int64 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *MeasurementRecordItem) GetReal() float64 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_Real); ok {
		return x.Real
	}
	return 0
}

func (x *MeasurementRecordItem) GetNoValue() int32 {
	if x, ok := x.GetMeasurementRecordItem().(*MeasurementRecordItem_NoValue); ok {
		return x.NoValue
	}
	return 0
}

type isMeasurementRecordItem_MeasurementRecordItem interface {
	isMeasurementRecordItem_MeasurementRecordItem()
}

type MeasurementRecordItem_Integer struct {
	Integer int64 `protobuf:"varint,1,opt,name=integer,json=MeasurementRecordItem:integer,proto3,oneof"`
}

type MeasurementRecordItem_Real struct {
	Real float64 `protobuf:"fixed64,2,opt,name=real,json=MeasurementRecordItem:real,proto3,oneof"`
}

type MeasurementRecordItem_NoValue struct {
	NoValue int32 `protobuf:"varint,3,opt,name=no_value,json=MeasurementRecordItem:noValue,proto3,oneof"`
}

func (*MeasurementRecordItem_Integer) isMeasurementRecordItem_MeasurementRecordItem() {}

func (*MeasurementRecordItem_Real) isMeasurementRecordItem_MeasurementRecordItem() {}

func (*MeasurementRecordItem_NoValue) isMeasurementRecordItem_MeasurementRecordItem() {}

// sequence from e2sm_kpm_ies_v2.asn:237
type MeasurementInfoActionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*MeasurementInfoActionItem `protobuf:"bytes,1,rep,name=value,json=MeasurementInfo-Action-List:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementInfoActionList) Reset() {
	*x = MeasurementInfoActionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionList) ProtoMessage() {}

func (x *MeasurementInfoActionList) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionList.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionList) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{44}
}

func (x *MeasurementInfoActionList) GetValue() []*MeasurementInfoActionItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:238
type MeasurementInfoActionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeasName *MeasurementTypeName `protobuf:"bytes,1,opt,name=meas_name,json=MeasurementInfo-Action-Item:measName,proto3" json:"meas_name,omitempty"`
	MeasId   *MeasurementTypeId   `protobuf:"bytes,2,opt,name=meas_id,json=MeasurementInfo-Action-Item:measID,proto3" json:"meas_id,omitempty"`
}

func (x *MeasurementInfoActionItem) Reset() {
	*x = MeasurementInfoActionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementInfoActionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementInfoActionItem) ProtoMessage() {}

func (x *MeasurementInfoActionItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementInfoActionItem.ProtoReflect.Descriptor instead.
func (*MeasurementInfoActionItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{45}
}

func (x *MeasurementInfoActionItem) GetMeasName() *MeasurementTypeName {
	if x != nil {
		return x.MeasName
	}
	return nil
}

func (x *MeasurementInfoActionItem) GetMeasId() *MeasurementTypeId {
	if x != nil {
		return x.MeasId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:255
type E2SmKpmEventTriggerDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-kpm-ies_v2.asn1:255
	//
	// Types that are assignable to E2SmKpmEventTriggerDefinition:
	//	*E2SmKpmEventTriggerDefinition_EventDefinitionFormat1
	E2SmKpmEventTriggerDefinition isE2SmKpmEventTriggerDefinition_E2SmKpmEventTriggerDefinition `protobuf_oneof:"e2_sm_kpm_event_trigger_definition"`
}

func (x *E2SmKpmEventTriggerDefinition) Reset() {
	*x = E2SmKpmEventTriggerDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmEventTriggerDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmEventTriggerDefinition) ProtoMessage() {}

func (x *E2SmKpmEventTriggerDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmEventTriggerDefinition.ProtoReflect.Descriptor instead.
func (*E2SmKpmEventTriggerDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{46}
}

func (m *E2SmKpmEventTriggerDefinition) GetE2SmKpmEventTriggerDefinition() isE2SmKpmEventTriggerDefinition_E2SmKpmEventTriggerDefinition {
	if m != nil {
		return m.E2SmKpmEventTriggerDefinition
	}
	return nil
}

func (x *E2SmKpmEventTriggerDefinition) GetEventDefinitionFormat1() *E2SmKpmEventTriggerDefinitionFormat1 {
	if x, ok := x.GetE2SmKpmEventTriggerDefinition().(*E2SmKpmEventTriggerDefinition_EventDefinitionFormat1); ok {
		return x.EventDefinitionFormat1
	}
	return nil
}

type isE2SmKpmEventTriggerDefinition_E2SmKpmEventTriggerDefinition interface {
	isE2SmKpmEventTriggerDefinition_E2SmKpmEventTriggerDefinition()
}

type E2SmKpmEventTriggerDefinition_EventDefinitionFormat1 struct {
	EventDefinitionFormat1 *E2SmKpmEventTriggerDefinitionFormat1 `protobuf:"bytes,1,opt,name=event_definition_format1,json=E2SM-KPM-EventTriggerDefinition:eventDefinition_Format1,proto3,oneof"`
}

func (*E2SmKpmEventTriggerDefinition_EventDefinitionFormat1) isE2SmKpmEventTriggerDefinition_E2SmKpmEventTriggerDefinition() {
}

// sequence from e2sm_kpm_ies_v2.asn:260
type E2SmKpmEventTriggerDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportingPeriod int32 `protobuf:"varint,1,opt,name=reporting_period,json=E2SM-KPM-EventTriggerDefinition-Format1:reportingPeriod,proto3" json:"reporting_period,omitempty"`
}

func (x *E2SmKpmEventTriggerDefinitionFormat1) Reset() {
	*x = E2SmKpmEventTriggerDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmEventTriggerDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmEventTriggerDefinitionFormat1) ProtoMessage() {}

func (x *E2SmKpmEventTriggerDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmEventTriggerDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmKpmEventTriggerDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{47}
}

func (x *E2SmKpmEventTriggerDefinitionFormat1) GetReportingPeriod() int32 {
	if x != nil {
		return x.ReportingPeriod
	}
	return 0
}

// sequence from e2sm_kpm_ies_v2.asn:269
type E2SmKpmActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicStyleType *RicStyleType `protobuf:"bytes,1,opt,name=ric_style_type,json=E2SM-KPM-ActionDefinition:ric_Style_Type,proto3" json:"ric_style_type,omitempty"`
	// Types that are assignable to E2SmKpmActionDefinition:
	//	*E2SmKpmActionDefinition_ActionDefinitionFormat1
	E2SmKpmActionDefinition isE2SmKpmActionDefinition_E2SmKpmActionDefinition `protobuf_oneof:"e2_sm_kpm_action_definition"`
}

func (x *E2SmKpmActionDefinition) Reset() {
	*x = E2SmKpmActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmActionDefinition) ProtoMessage() {}

func (x *E2SmKpmActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmActionDefinition.ProtoReflect.Descriptor instead.
func (*E2SmKpmActionDefinition) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{48}
}

func (x *E2SmKpmActionDefinition) GetRicStyleType() *RicStyleType {
	if x != nil {
		return x.RicStyleType
	}
	return nil
}

func (m *E2SmKpmActionDefinition) GetE2SmKpmActionDefinition() isE2SmKpmActionDefinition_E2SmKpmActionDefinition {
	if m != nil {
		return m.E2SmKpmActionDefinition
	}
	return nil
}

func (x *E2SmKpmActionDefinition) GetActionDefinitionFormat1() *E2SmKpmActionDefinitionFormat1 {
	if x, ok := x.GetE2SmKpmActionDefinition().(*E2SmKpmActionDefinition_ActionDefinitionFormat1); ok {
		return x.ActionDefinitionFormat1
	}
	return nil
}

type isE2SmKpmActionDefinition_E2SmKpmActionDefinition interface {
	isE2SmKpmActionDefinition_E2SmKpmActionDefinition()
}

type E2SmKpmActionDefinition_ActionDefinitionFormat1 struct {
	ActionDefinitionFormat1 *E2SmKpmActionDefinitionFormat1 `protobuf:"bytes,2,opt,name=action_definition_format1,json=E2SM-KPM-ActionDefinition:actionDefinition_Format1,proto3,oneof"`
}

func (*E2SmKpmActionDefinition_ActionDefinitionFormat1) isE2SmKpmActionDefinition_E2SmKpmActionDefinition() {
}

// sequence from e2sm_kpm_ies_v2.asn:278
type E2SmKpmActionDefinitionFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellObjId    *CellObjectId        `protobuf:"bytes,1,opt,name=cell_obj_id,json=E2SM-KPM-ActionDefinition-Format1:cellObjID,proto3" json:"cell_obj_id,omitempty"`
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,2,opt,name=meas_info_list,json=E2SM-KPM-ActionDefinition-Format1:measInfoList,proto3" json:"meas_info_list,omitempty"`
	GranulPeriod *GranularityPeriod   `protobuf:"bytes,3,opt,name=granul_period,json=E2SM-KPM-ActionDefinition-Format1:granulPeriod,proto3" json:"granul_period,omitempty"`
	SubscriptId  *SubscriptionId      `protobuf:"bytes,4,opt,name=subscript_id,json=E2SM-KPM-ActionDefinition-Format1:subscriptID,proto3" json:"subscript_id,omitempty"`
}

func (x *E2SmKpmActionDefinitionFormat1) Reset() {
	*x = E2SmKpmActionDefinitionFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmActionDefinitionFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmActionDefinitionFormat1) ProtoMessage() {}

func (x *E2SmKpmActionDefinitionFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmActionDefinitionFormat1.ProtoReflect.Descriptor instead.
func (*E2SmKpmActionDefinitionFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{49}
}

func (x *E2SmKpmActionDefinitionFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmKpmActionDefinitionFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmKpmActionDefinitionFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmKpmActionDefinitionFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:293
type E2SmKpmIndicationHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm-kpm-v01.00.asn1:293
	//
	// Types that are assignable to E2SmKpmIndicationHeader:
	//	*E2SmKpmIndicationHeader_IndicationHeaderFormat1
	E2SmKpmIndicationHeader isE2SmKpmIndicationHeader_E2SmKpmIndicationHeader `protobuf_oneof:"e2_sm_kpm_indication_header"`
}

func (x *E2SmKpmIndicationHeader) Reset() {
	*x = E2SmKpmIndicationHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmIndicationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmIndicationHeader) ProtoMessage() {}

func (x *E2SmKpmIndicationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmIndicationHeader.ProtoReflect.Descriptor instead.
func (*E2SmKpmIndicationHeader) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{50}
}

func (m *E2SmKpmIndicationHeader) GetE2SmKpmIndicationHeader() isE2SmKpmIndicationHeader_E2SmKpmIndicationHeader {
	if m != nil {
		return m.E2SmKpmIndicationHeader
	}
	return nil
}

func (x *E2SmKpmIndicationHeader) GetIndicationHeaderFormat1() *E2SmKpmIndicationHeaderFormat1 {
	if x, ok := x.GetE2SmKpmIndicationHeader().(*E2SmKpmIndicationHeader_IndicationHeaderFormat1); ok {
		return x.IndicationHeaderFormat1
	}
	return nil
}

type isE2SmKpmIndicationHeader_E2SmKpmIndicationHeader interface {
	isE2SmKpmIndicationHeader_E2SmKpmIndicationHeader()
}

type E2SmKpmIndicationHeader_IndicationHeaderFormat1 struct {
	IndicationHeaderFormat1 *E2SmKpmIndicationHeaderFormat1 `protobuf:"bytes,1,opt,name=indication_header_format1,json=E2SM-KPM-IndicationHeader:indicationHeader_Format1,proto3,oneof"`
}

func (*E2SmKpmIndicationHeader_IndicationHeaderFormat1) isE2SmKpmIndicationHeader_E2SmKpmIndicationHeader() {
}

// sequence from e2sm_kpm_ies_v2.asn:298
type E2SmKpmIndicationHeaderFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColletStartTime   *TimeStamp       `protobuf:"bytes,1,opt,name=collet_start_time,json=E2SM-KPM-IndicationHeader-Format1:colletStartTime,proto3" json:"collet_start_time,omitempty"`
	FileFormatversion string           `protobuf:"bytes,2,opt,name=file_formatversion,json=E2SM-KPM-IndicationHeader-Format1:fileFormatversion,proto3" json:"file_formatversion,omitempty"`
	SenderName        string           `protobuf:"bytes,3,opt,name=sender_name,json=E2SM-KPM-IndicationHeader-Format1:senderName,proto3" json:"sender_name,omitempty"`
	SenderType        string           `protobuf:"bytes,4,opt,name=sender_type,json=E2SM-KPM-IndicationHeader-Format1:senderType,proto3" json:"sender_type,omitempty"`
	VendorName        string           `protobuf:"bytes,5,opt,name=vendor_name,json=E2SM-KPM-IndicationHeader-Format1:vendorName,proto3" json:"vendor_name,omitempty"`
	KpmNodeId         *GlobalKpmnodeId `protobuf:"bytes,6,opt,name=kpm_node_id,json=E2SM-KPM-IndicationHeader-Format1:kpmNodeID,proto3" json:"kpm_node_id,omitempty"`
}

func (x *E2SmKpmIndicationHeaderFormat1) Reset() {
	*x = E2SmKpmIndicationHeaderFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmIndicationHeaderFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmIndicationHeaderFormat1) ProtoMessage() {}

func (x *E2SmKpmIndicationHeaderFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmIndicationHeaderFormat1.ProtoReflect.Descriptor instead.
func (*E2SmKpmIndicationHeaderFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{51}
}

func (x *E2SmKpmIndicationHeaderFormat1) GetColletStartTime() *TimeStamp {
	if x != nil {
		return x.ColletStartTime
	}
	return nil
}

func (x *E2SmKpmIndicationHeaderFormat1) GetFileFormatversion() string {
	if x != nil {
		return x.FileFormatversion
	}
	return ""
}

func (x *E2SmKpmIndicationHeaderFormat1) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *E2SmKpmIndicationHeaderFormat1) GetSenderType() string {
	if x != nil {
		return x.SenderType
	}
	return ""
}

func (x *E2SmKpmIndicationHeaderFormat1) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *E2SmKpmIndicationHeaderFormat1) GetKpmNodeId() *GlobalKpmnodeId {
	if x != nil {
		return x.KpmNodeId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:315
type E2SmKpmIndicationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2sm_kpm_ies_v2.asn:315
	//
	// Types that are assignable to E2SmKpmIndicationMessage:
	//	*E2SmKpmIndicationMessage_IndicationMessageFormat1
	E2SmKpmIndicationMessage isE2SmKpmIndicationMessage_E2SmKpmIndicationMessage `protobuf_oneof:"e2_sm_kpm_indication_message"`
}

func (x *E2SmKpmIndicationMessage) Reset() {
	*x = E2SmKpmIndicationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmIndicationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmIndicationMessage) ProtoMessage() {}

func (x *E2SmKpmIndicationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmIndicationMessage.ProtoReflect.Descriptor instead.
func (*E2SmKpmIndicationMessage) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{52}
}

func (m *E2SmKpmIndicationMessage) GetE2SmKpmIndicationMessage() isE2SmKpmIndicationMessage_E2SmKpmIndicationMessage {
	if m != nil {
		return m.E2SmKpmIndicationMessage
	}
	return nil
}

func (x *E2SmKpmIndicationMessage) GetIndicationMessageFormat1() *E2SmKpmIndicationMessageFormat1 {
	if x, ok := x.GetE2SmKpmIndicationMessage().(*E2SmKpmIndicationMessage_IndicationMessageFormat1); ok {
		return x.IndicationMessageFormat1
	}
	return nil
}

type isE2SmKpmIndicationMessage_E2SmKpmIndicationMessage interface {
	isE2SmKpmIndicationMessage_E2SmKpmIndicationMessage()
}

type E2SmKpmIndicationMessage_IndicationMessageFormat1 struct {
	IndicationMessageFormat1 *E2SmKpmIndicationMessageFormat1 `protobuf:"bytes,1,opt,name=indication_message_format1,json=E2SM-KPM-IndicationMessage:indicationMessage_Format1,proto3,oneof"`
}

func (*E2SmKpmIndicationMessage_IndicationMessageFormat1) isE2SmKpmIndicationMessage_E2SmKpmIndicationMessage() {
}

// sequence from e2sm_kpm_ies_v2.asn:320
type E2SmKpmIndicationMessageFormat1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptId  *SubscriptionId      `protobuf:"bytes,1,opt,name=subscript_id,json=E2SM-KPM-IndicationMessage-Format1:subscriptID,proto3" json:"subscript_id,omitempty"`
	CellObjId    *CellObjectId        `protobuf:"bytes,2,opt,name=cell_obj_id,json=E2SM-KPM-IndicationMessage-Format1:cellObjID,proto3" json:"cell_obj_id,omitempty"`
	GranulPeriod *GranularityPeriod   `protobuf:"bytes,3,opt,name=granul_period,json=E2SM-KPM-IndicationMessage-Format1:granulPeriod,proto3" json:"granul_period,omitempty"`
	MeasInfoList *MeasurementInfoList `protobuf:"bytes,4,opt,name=meas_info_list,json=E2SM-KPM-IndicationMessage-Format1:measInfoList,proto3" json:"meas_info_list,omitempty"`
	MeasData     *MeasurementData     `protobuf:"bytes,5,opt,name=meas_data,json=E2SM-KPM-IndicationMessage-Format1:measData,proto3" json:"meas_data,omitempty"`
}

func (x *E2SmKpmIndicationMessageFormat1) Reset() {
	*x = E2SmKpmIndicationMessageFormat1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmIndicationMessageFormat1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmIndicationMessageFormat1) ProtoMessage() {}

func (x *E2SmKpmIndicationMessageFormat1) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmIndicationMessageFormat1.ProtoReflect.Descriptor instead.
func (*E2SmKpmIndicationMessageFormat1) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{53}
}

func (x *E2SmKpmIndicationMessageFormat1) GetSubscriptId() *SubscriptionId {
	if x != nil {
		return x.SubscriptId
	}
	return nil
}

func (x *E2SmKpmIndicationMessageFormat1) GetCellObjId() *CellObjectId {
	if x != nil {
		return x.CellObjId
	}
	return nil
}

func (x *E2SmKpmIndicationMessageFormat1) GetGranulPeriod() *GranularityPeriod {
	if x != nil {
		return x.GranulPeriod
	}
	return nil
}

func (x *E2SmKpmIndicationMessageFormat1) GetMeasInfoList() *MeasurementInfoList {
	if x != nil {
		return x.MeasInfoList
	}
	return nil
}

func (x *E2SmKpmIndicationMessageFormat1) GetMeasData() *MeasurementData {
	if x != nil {
		return x.MeasData
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:333
type E2SmKpmRanfunctionDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionName          *RanfunctionName            `protobuf:"bytes,1,opt,name=ran_function_name,json=E2SM-KPM-RANfunction-Description:ranFunction_Name,proto3" json:"ran_function_name,omitempty"`
	RicKpmNodeList           []*RicKpmnodeItem           `protobuf:"bytes,2,rep,name=ric_kpm_node_list,json=E2SM-KPM-RANfunction-Description:ric_KPM_Node_List,proto3" json:"ric_kpm_node_list,omitempty"`
	RicEventTriggerStyleList []*RicEventTriggerStyleItem `protobuf:"bytes,3,rep,name=ric_event_trigger_style_list,json=E2SM-KPM-RANfunction-Description:ric_EventTriggerStyle_List,proto3" json:"ric_event_trigger_style_list,omitempty"`
	RicReportStyleList       []*RicReportStyleItem       `protobuf:"bytes,4,rep,name=ric_report_style_list,json=E2SM-KPM-RANfunction-Description:ric_ReportStyle_List,proto3" json:"ric_report_style_list,omitempty"`
}

func (x *E2SmKpmRanfunctionDescription) Reset() {
	*x = E2SmKpmRanfunctionDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SmKpmRanfunctionDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SmKpmRanfunctionDescription) ProtoMessage() {}

func (x *E2SmKpmRanfunctionDescription) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SmKpmRanfunctionDescription.ProtoReflect.Descriptor instead.
func (*E2SmKpmRanfunctionDescription) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{54}
}

func (x *E2SmKpmRanfunctionDescription) GetRanFunctionName() *RanfunctionName {
	if x != nil {
		return x.RanFunctionName
	}
	return nil
}

func (x *E2SmKpmRanfunctionDescription) GetRicKpmNodeList() []*RicKpmnodeItem {
	if x != nil {
		return x.RicKpmNodeList
	}
	return nil
}

func (x *E2SmKpmRanfunctionDescription) GetRicEventTriggerStyleList() []*RicEventTriggerStyleItem {
	if x != nil {
		return x.RicEventTriggerStyleList
	}
	return nil
}

func (x *E2SmKpmRanfunctionDescription) GetRicReportStyleList() []*RicReportStyleItem {
	if x != nil {
		return x.RicReportStyleList
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:341
type RicKpmnodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicKpmnodeType            *GlobalKpmnodeId             `protobuf:"bytes,1,opt,name=ric_kpmnode_type,json=RIC-KPMNode-Item:ric_KPMNode_Type,proto3" json:"ric_kpmnode_type,omitempty"`
	CellMeasurementObjectList []*CellMeasurementObjectItem `protobuf:"bytes,2,rep,name=cell_measurement_object_list,json=RIC-KPMNode-Item:cell_Measurement_Object_List,proto3" json:"cell_measurement_object_list,omitempty"`
}

func (x *RicKpmnodeItem) Reset() {
	*x = RicKpmnodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicKpmnodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicKpmnodeItem) ProtoMessage() {}

func (x *RicKpmnodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicKpmnodeItem.ProtoReflect.Descriptor instead.
func (*RicKpmnodeItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{55}
}

func (x *RicKpmnodeItem) GetRicKpmnodeType() *GlobalKpmnodeId {
	if x != nil {
		return x.RicKpmnodeType
	}
	return nil
}

func (x *RicKpmnodeItem) GetCellMeasurementObjectList() []*CellMeasurementObjectItem {
	if x != nil {
		return x.CellMeasurementObjectList
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:347
type CellMeasurementObjectItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellObjectId *CellObjectId `protobuf:"bytes,1,opt,name=cell_object_id,json=Cell-Measurement-Object-Item:cell_object_ID,proto3" json:"cell_object_id,omitempty"`
	CellGlobalId *CellGlobalId `protobuf:"bytes,2,opt,name=cell_global_id,json=Cell-Measurement-Object-Item:cell_global_ID,proto3" json:"cell_global_id,omitempty"`
}

func (x *CellMeasurementObjectItem) Reset() {
	*x = CellMeasurementObjectItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellMeasurementObjectItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellMeasurementObjectItem) ProtoMessage() {}

func (x *CellMeasurementObjectItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellMeasurementObjectItem.ProtoReflect.Descriptor instead.
func (*CellMeasurementObjectItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{56}
}

func (x *CellMeasurementObjectItem) GetCellObjectId() *CellObjectId {
	if x != nil {
		return x.CellObjectId
	}
	return nil
}

func (x *CellMeasurementObjectItem) GetCellGlobalId() *CellGlobalId {
	if x != nil {
		return x.CellGlobalId
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:353
type RicEventTriggerStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerStyleType  *RicStyleType  `protobuf:"bytes,1,opt,name=ric_event_trigger_style_type,json=RIC-EventTriggerStyle-Item:ric_EventTriggerStyle_Type,proto3" json:"ric_event_trigger_style_type,omitempty"`
	RicEventTriggerStyleName  *RicStyleName  `protobuf:"bytes,2,opt,name=ric_event_trigger_style_name,json=RIC-EventTriggerStyle-Item:ric_EventTriggerStyle_Name,proto3" json:"ric_event_trigger_style_name,omitempty"`
	RicEventTriggerFormatType *RicFormatType `protobuf:"bytes,3,opt,name=ric_event_trigger_format_type,json=RIC-EventTriggerStyle-Item:ric_EventTriggerFormat_Type,proto3" json:"ric_event_trigger_format_type,omitempty"`
}

func (x *RicEventTriggerStyleItem) Reset() {
	*x = RicEventTriggerStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicEventTriggerStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicEventTriggerStyleItem) ProtoMessage() {}

func (x *RicEventTriggerStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicEventTriggerStyleItem.ProtoReflect.Descriptor instead.
func (*RicEventTriggerStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{57}
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleType() *RicStyleType {
	if x != nil {
		return x.RicEventTriggerStyleType
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerStyleName() *RicStyleName {
	if x != nil {
		return x.RicEventTriggerStyleName
	}
	return nil
}

func (x *RicEventTriggerStyleItem) GetRicEventTriggerFormatType() *RicFormatType {
	if x != nil {
		return x.RicEventTriggerFormatType
	}
	return nil
}

// sequence from e2sm_kpm_ies_v2.asn:360
type RicReportStyleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicReportStyleType             *RicStyleType              `protobuf:"bytes,1,opt,name=ric_report_style_type,json=RIC-ReportStyle-Item:ric_ReportStyle_Type,proto3" json:"ric_report_style_type,omitempty"`
	RicReportStyleName             *RicStyleName              `protobuf:"bytes,2,opt,name=ric_report_style_name,json=RIC-ReportStyle-Item:ric_ReportStyle_Name,proto3" json:"ric_report_style_name,omitempty"`
	RicActionFormatType            *RicFormatType             `protobuf:"bytes,3,opt,name=ric_action_format_type,json=RIC-ReportStyle-Item:ric_ActionFormat_Type,proto3" json:"ric_action_format_type,omitempty"`
	MeasInfoActionList             *MeasurementInfoActionList `protobuf:"bytes,4,opt,name=meas_info_action_list,json=RIC-ReportStyle-Item:measInfo_Action_List,proto3" json:"meas_info_action_list,omitempty"`
	RicIndicationHeaderFormatType  *RicFormatType             `protobuf:"bytes,5,opt,name=ric_indication_header_format_type,json=RIC-ReportStyle-Item:ric_IndicationHeaderFormat_Type,proto3" json:"ric_indication_header_format_type,omitempty"`
	RicIndicationMessageFormatType *RicFormatType             `protobuf:"bytes,6,opt,name=ric_indication_message_format_type,json=RIC-ReportStyle-Item:ric_IndicationMessageFormat_Type,proto3" json:"ric_indication_message_format_type,omitempty"`
}

func (x *RicReportStyleItem) Reset() {
	*x = RicReportStyleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicReportStyleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicReportStyleItem) ProtoMessage() {}

func (x *RicReportStyleItem) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicReportStyleItem.ProtoReflect.Descriptor instead.
func (*RicReportStyleItem) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{58}
}

func (x *RicReportStyleItem) GetRicReportStyleType() *RicStyleType {
	if x != nil {
		return x.RicReportStyleType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicReportStyleName() *RicStyleName {
	if x != nil {
		return x.RicReportStyleName
	}
	return nil
}

func (x *RicReportStyleItem) GetRicActionFormatType() *RicFormatType {
	if x != nil {
		return x.RicActionFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetMeasInfoActionList() *MeasurementInfoActionList {
	if x != nil {
		return x.MeasInfoActionList
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationHeaderFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationHeaderFormatType
	}
	return nil
}

func (x *RicReportStyleItem) GetRicIndicationMessageFormatType() *RicFormatType {
	if x != nil {
		return x.RicIndicationMessageFormatType
	}
	return nil
}

type RicStyleName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,json=RIC-Style-Name:value,proto3" json:"value,omitempty"`
}

func (x *RicStyleName) Reset() {
	*x = RicStyleName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicStyleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicStyleName) ProtoMessage() {}

func (x *RicStyleName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicStyleName.ProtoReflect.Descriptor instead.
func (*RicStyleName) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{59}
}

func (x *RicStyleName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Maybe validation part should be added..
type CellObjectId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,json=CellObjectID:value,proto3" json:"value,omitempty"`
}

func (x *CellObjectId) Reset() {
	*x = CellObjectId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellObjectId) ProtoMessage() {}

func (x *CellObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellObjectId.ProtoReflect.Descriptor instead.
func (*CellObjectId) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{60}
}

func (x *CellObjectId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Maybe validation part should be added..
type MeasurementTypeName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,json=MeasurementTypeName:value,proto3" json:"value,omitempty"`
}

func (x *MeasurementTypeName) Reset() {
	*x = MeasurementTypeName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementTypeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementTypeName) ProtoMessage() {}

func (x *MeasurementTypeName) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementTypeName.ProtoReflect.Descriptor instead.
func (*MeasurementTypeName) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{61}
}

func (x *MeasurementTypeName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PlmnIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,json=PLMN-Identity:value,proto3" json:"value,omitempty"`
}

func (x *PlmnIdentity) Reset() {
	*x = PlmnIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlmnIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlmnIdentity) ProtoMessage() {}

func (x *PlmnIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlmnIdentity.ProtoReflect.Descriptor instead.
func (*PlmnIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{62}
}

func (x *PlmnIdentity) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Maybe validation part should be added..
type TimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,json=TimeStamp:value,proto3" json:"value,omitempty"`
}

func (x *TimeStamp) Reset() {
	*x = TimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStamp) ProtoMessage() {}

func (x *TimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStamp.ProtoReflect.Descriptor instead.
func (*TimeStamp) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{63}
}

func (x *TimeStamp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type EutracellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *BitString `protobuf:"bytes,1,opt,name=value,json=EUTRACellIdentity:value,proto3" json:"value,omitempty"` //28
}

func (x *EutracellIdentity) Reset() {
	*x = EutracellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EutracellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EutracellIdentity) ProtoMessage() {}

func (x *EutracellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EutracellIdentity.ProtoReflect.Descriptor instead.
func (*EutracellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{64}
}

func (x *EutracellIdentity) GetValue() *BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

type NrcellIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *BitString `protobuf:"bytes,1,opt,name=value,json=NRCellIdentity:value,proto3" json:"value,omitempty"` //36
}

func (x *NrcellIdentity) Reset() {
	*x = NrcellIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NrcellIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NrcellIdentity) ProtoMessage() {}

func (x *NrcellIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NrcellIdentity.ProtoReflect.Descriptor instead.
func (*NrcellIdentity) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{65}
}

func (x *NrcellIdentity) GetValue() *BitString {
	if x != nil {
		return x.Value
	}
	return nil
}

type BitString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value uint64 `protobuf:"varint,1,opt,name=value,json=BIT_STRING:value,proto3" json:"value,omitempty"`
	Len   uint32 `protobuf:"varint,2,opt,name=len,json=BIT_STRING:len,proto3" json:"len,omitempty"`
}

func (x *BitString) Reset() {
	*x = BitString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BitString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitString) ProtoMessage() {}

func (x *BitString) ProtoReflect() protoreflect.Message {
	mi := &file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitString.ProtoReflect.Descriptor instead.
func (*BitString) Descriptor() ([]byte, []int) {
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP(), []int{66}
}

func (x *BitString) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *BitString) GetLen() uint32 {
	if x != nil {
		return x.Len
	}
	return 0
}

var File_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto protoreflect.FileDescriptor

var file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDesc = []byte{
	0x0a, 0x20, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2f, 0x76, 0x32,
	0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e,
	0x76, 0x32, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4,
	0x01, 0x0a, 0x08, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x67, 0x69, 0x12, 0x4c, 0x0a, 0x0e, 0x70,
	0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x16, 0x45, 0x55, 0x54, 0x52, 0x41, 0x43, 0x47, 0x49, 0x3a, 0x70, 0x4c, 0x4d, 0x4e,
	0x5f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x13, 0x65, 0x5f, 0x75,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c,
	0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x1a, 0x45, 0x55, 0x54, 0x52, 0x41,
	0x43, 0x47, 0x49, 0x3a, 0x65, 0x55, 0x54, 0x52, 0x41, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x05, 0x4e, 0x72, 0x63, 0x67, 0x69, 0x12,
	0x49, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b,
	0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x13, 0x4e, 0x52, 0x43, 0x47, 0x49, 0x3a, 0x70, 0x4c, 0x4d,
	0x4e, 0x5f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x10, 0x6e, 0x5f,
	0x72, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x14, 0x4e, 0x52, 0x43, 0x47, 0x49, 0x3a, 0x6e, 0x52, 0x43, 0x65,
	0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x43,
	0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x6e,
	0x72, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x72, 0x63,
	0x67, 0x69, 0x48, 0x00, 0x52, 0x13, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x49, 0x44, 0x3a, 0x6e, 0x72, 0x5f, 0x43, 0x47, 0x49, 0x12, 0x46, 0x0a, 0x0a, 0x65, 0x5f, 0x75,
	0x74, 0x72, 0x61, 0x5f, 0x63, 0x67, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x75, 0x74, 0x72, 0x61, 0x63, 0x67, 0x69, 0x48, 0x00, 0x52, 0x16, 0x43, 0x65, 0x6c, 0x6c, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x49, 0x44, 0x3a, 0x65, 0x55, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x47,
	0x49, 0x42, 0x10, 0x0a, 0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x06, 0x53, 0x6e, 0x73, 0x73, 0x61, 0x69, 0x12, 0x21, 0x0a,
	0x04, 0x73, 0x5f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x7a, 0x02, 0x68, 0x01, 0x52, 0x0a, 0x53, 0x4e, 0x53, 0x53, 0x41, 0x49, 0x3a, 0x73, 0x53, 0x54,
	0x12, 0x1f, 0x0a, 0x03, 0x73, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x7a, 0x02, 0x68, 0x03, 0x52, 0x09, 0x53, 0x4e, 0x53, 0x53, 0x41, 0x49, 0x3a, 0x73,
	0x44, 0x22, 0x31, 0x0a, 0x06, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x12, 0x27, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a,
	0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x0c, 0x46, 0x69, 0x76, 0x65, 0x51, 0x49, 0x3a, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2b, 0x0a, 0x03, 0x51, 0x63, 0x69, 0x12, 0x24, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a,
	0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x09, 0x51, 0x43, 0x49, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x2a, 0x0a, 0x03, 0x41, 0x72, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x18, 0x0f,
	0x28, 0x01, 0x52, 0x09, 0x41, 0x52, 0x50, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a,
	0x11, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x17, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0f, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52,
	0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x18, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x16, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x44,
	0x42, 0x12, 0x0a, 0x10, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18,
	0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb,
	0x08, 0x0a, 0x10, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x3a, 0x70, 0x6c, 0x6d, 0x6e, 0x49, 0x44, 0x12, 0x42, 0x0a, 0x08, 0x73,
	0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x6e, 0x73, 0x73, 0x61, 0x69, 0x52, 0x18, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12,
	0x40, 0x0a, 0x07, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x69, 0x76, 0x65, 0x51, 0x69, 0x52, 0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x66, 0x69, 0x76, 0x65, 0x51,
	0x49, 0x12, 0x37, 0x0a, 0x04, 0x71, 0x5f, 0x63, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32,
	0x2e, 0x51, 0x63, 0x69, 0x52, 0x14, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x71, 0x43, 0x49, 0x12, 0x3d, 0x0a, 0x07, 0x71, 0x5f,
	0x63, 0x69, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x63, 0x69,
	0x52, 0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x3a, 0x71, 0x43, 0x49, 0x6d, 0x61, 0x78, 0x12, 0x3d, 0x0a, 0x07, 0x71, 0x5f, 0x63,
	0x69, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x51, 0x63, 0x69, 0x52,
	0x17, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x3a, 0x71, 0x43, 0x49, 0x6d, 0x69, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x5f, 0x72, 0x70,
	0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x72, 0x70, 0x52, 0x17,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x3a, 0x61, 0x52, 0x50, 0x6d, 0x61, 0x78, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x5f, 0x72, 0x70, 0x6d,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x72, 0x70, 0x52, 0x17, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a,
	0x61, 0x52, 0x50, 0x6d, 0x69, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x62, 0x69, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa,
	0x42, 0x08, 0x1a, 0x06, 0x18, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x1d, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x62, 0x69, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6d, 0x75, 0x5f, 0x6d, 0x69, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x1d, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x55, 0x5f, 0x4d, 0x49, 0x4d, 0x4f, 0x12, 0x37, 0x0a, 0x04,
	0x73, 0x5f, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x55, 0x4d, 0x52,
	0x14, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x3a, 0x73, 0x55, 0x4d, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x69,
	0x6e, 0x5f, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06,
	0x18, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x64, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e,
	0x58, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0x80, 0x80, 0x04,
	0x28, 0x01, 0x52, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x3a, 0x64, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x59, 0x12, 0x3a, 0x0a,
	0x0a, 0x64, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x7a, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x18, 0x80, 0x80, 0x04, 0x28, 0x01, 0x52, 0x19,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x3a, 0x64, 0x69, 0x73, 0x74, 0x42, 0x69, 0x6e, 0x5a, 0x12, 0x5f, 0x0a, 0x12, 0x70, 0x72, 0x65,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d,
	0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x21, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x70, 0x72, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x52, 0x1c,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x3a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x22, 0x44, 0x0a, 0x0e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xfa,
	0x42, 0x0a, 0x22, 0x08, 0x18, 0x80, 0x80, 0x80, 0x80, 0x10, 0x28, 0x01, 0x52, 0x14, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x3a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x0f, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e,
	0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x14, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42,
	0x12, 0x50, 0x0a, 0x07, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65,
	0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x17, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x3a, 0x65, 0x6e, 0x5f, 0x67,
	0x4e, 0x42, 0x12, 0x50, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f,
	0x64, 0x65, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x17, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x3a, 0x6e, 0x67,
	0x5f, 0x65, 0x4e, 0x42, 0x12, 0x48, 0x0a, 0x04, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64,
	0x65, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x3a, 0x65, 0x4e, 0x42, 0x42, 0x13,
	0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x22, 0x8f, 0x02, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70,
	0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x52,
	0x22, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x67,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x4e, 0x42,
	0x5f, 0x49, 0x44, 0x12, 0x53, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x43,
	0x75, 0x55, 0x70, 0x49, 0x64, 0x52, 0x21, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d,
	0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42, 0x5f,
	0x43, 0x55, 0x5f, 0x55, 0x50, 0x5f, 0x49, 0x44, 0x12, 0x4b, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e,
	0x62, 0x44, 0x75, 0x49, 0x64, 0x52, 0x1e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d,
	0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42, 0x5f,
	0x44, 0x55, 0x5f, 0x49, 0x44, 0x22, 0x94, 0x01, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x67, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x3a, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x06, 0x67, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x49,
	0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x09,
	0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x12, 0x47, 0x4e, 0x42, 0x2d, 0x43, 0x55,
	0x2d, 0x55, 0x50, 0x2d, 0x49, 0x44, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x07,
	0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x28, 0x00, 0x52, 0x0f, 0x47, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49,
	0x44, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x61, 0x0a, 0x0b, 0x47, 0x6e, 0x62, 0x49, 0x64,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x14, 0x47, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x2d, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x3a, 0x67, 0x6e, 0x62, 0x5f, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x67, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x14, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x25, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x3a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x4e, 0x42, 0x5f, 0x49,
	0x44, 0x12, 0x56, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x52, 0x24, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f,
	0x64, 0x65, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42,
	0x5f, 0x43, 0x55, 0x5f, 0x55, 0x50, 0x5f, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x0a, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x52, 0x21, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50,
	0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a,
	0x67, 0x4e, 0x42, 0x5f, 0x44, 0x55, 0x5f, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a, 0x0d, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x0e, 0x70,
	0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x1c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x4e, 0x42, 0x2d, 0x49,
	0x44, 0x3a, 0x70, 0x4c, 0x4d, 0x4e, 0x5f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x3f, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x15, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x65, 0x6e, 0x47, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42, 0x5f, 0x49, 0x44,
	0x22, 0x54, 0x0a, 0x07, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x67,
	0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0f, 0x45, 0x4e, 0x47, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e,
	0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x62, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x52, 0x28, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x3a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x4e, 0x42,
	0x5f, 0x49, 0x44, 0x12, 0x4e, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b,
	0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64,
	0x52, 0x21, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d,
	0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x4e, 0x42, 0x5f, 0x44, 0x55,
	0x5f, 0x49, 0x44, 0x22, 0xce, 0x02, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67,
	0x65, 0x4e, 0x62, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x16, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e,
	0x42, 0x2d, 0x49, 0x44, 0x3a, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x06,
	0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e,
	0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x15, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x12, 0x59, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f,
	0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42,
	0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x21, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x6e, 0x67, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x4d,
	0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x4e, 0x42, 0x5f, 0x49, 0x44, 0x12, 0x57, 0x0a, 0x12, 0x6c,
	0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b,
	0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x20, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x42, 0x2d,
	0x49, 0x44, 0x3a, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x4e,
	0x42, 0x5f, 0x49, 0x44, 0x22, 0x9d, 0x02, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x1a, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x2d,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x65, 0x6e, 0x62, 0x5f, 0x49, 0x44, 0x5f, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x12, 0x57, 0x0a, 0x11, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x1f, 0x45, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x2d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x65, 0x6e, 0x62, 0x5f, 0x49,
	0x44, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x55, 0x0a, 0x10,
	0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x1e, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x2d, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x3a, 0x65, 0x6e, 0x62, 0x5f, 0x49, 0x44, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x22, 0x6d, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70,
	0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x57, 0x0a, 0x0e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52,
	0x22, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x50, 0x4d, 0x6e, 0x6f, 0x64, 0x65, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x4e, 0x42,
	0x5f, 0x49, 0x44, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e,
	0x62, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x1a, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x70, 0x4c, 0x4d, 0x4e, 0x5f, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x13, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x65, 0x4e, 0x42, 0x5f,
	0x49, 0x44, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0d,
	0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x13, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x3a, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65,
	0x4e, 0x42, 0x5f, 0x49, 0x44, 0x12, 0x45, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x12, 0x45, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x3a, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x4e, 0x42, 0x5f, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06,
	0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x17, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x26, 0x52, 0x41, 0x4e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x72, 0x61,
	0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x25, 0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x45, 0x32, 0x53, 0x4d, 0x5f, 0x4f, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x18, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x28, 0x52, 0x41,
	0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x44, 0x65, 0x63, 0x73, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x25, 0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x33, 0x0a, 0x0c,
	0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x52, 0x49, 0x43,
	0x2d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x35, 0x0a, 0x0d, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x52, 0x49, 0x43, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2d, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x41, 0x0a, 0x0f, 0x4d, 0x61, 0x78, 0x6e,
	0x6f, 0x6f, 0x66, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x1a,
	0x03, 0x08, 0x80, 0x08, 0x52, 0x15, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4b, 0x50, 0x4d,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x4d,
	0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a,
	0x04, 0x08, 0x80, 0x80, 0x01, 0x52, 0x12, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x4d, 0x61, 0x78,
	0x6e, 0x6f, 0x6f, 0x66, 0x52, 0x69, 0x63, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x3f, 0x52, 0x16, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x52, 0x69,
	0x63, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a,
	0x16, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x08, 0x80, 0x80,
	0x04, 0x52, 0x1c, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x40, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22, 0x06, 0x08, 0xff, 0xff, 0xff, 0xff, 0x07, 0x52,
	0x10, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x54, 0x0a, 0x18, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x1a, 0x04, 0x08, 0x80, 0x80, 0x04, 0x52, 0x1e, 0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x17, 0x4d, 0x61, 0x78, 0x6e, 0x6f,
	0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x22, 0x06, 0x08, 0xff, 0xff, 0xff, 0xff, 0x07, 0x52, 0x17,
	0x4d, 0x61, 0x78, 0x6e, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc2, 0x01,
	0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6d,
	0x65, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x21, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x52, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x13, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5e, 0x0a, 0x0d, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4d, 0x0a, 0x0a, 0x6d, 0x65, 0x61, 0x73, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x17, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6d, 0x65, 0x61,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x5a, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x15, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x62, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x4d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70,
	0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x17, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x30, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x1d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x48, 0x00, 0x52, 0x1a, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x65, 0x61, 0x6c, 0x12, 0x3c,
	0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x1a, 0x04, 0x10, 0x01, 0x28, 0x00, 0x48, 0x00, 0x52, 0x1d, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6e, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x19, 0x0a, 0x17,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x78, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x21,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x5c, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x24, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x07, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x52, 0x22, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x6d,
	0x65, 0x61, 0x73, 0x49, 0x44, 0x22, 0xd9, 0x01, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70,
	0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x91, 0x01, 0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x53, 0x6d,
	0x4b, 0x70, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x48, 0x00, 0x52, 0x37, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x24, 0x0a, 0x22, 0x65,
	0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x79, 0x0a, 0x24, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x37, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0xa2, 0x02, 0x0a,
	0x17, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x28,
	0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x19, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x48, 0x00, 0x52, 0x32,
	0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x31, 0x42, 0x1d, 0x0a, 0x1b, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xbc, 0x03, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x12, 0x5e, 0x0a, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x2b, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50,
	0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x63, 0x65, 0x6c, 0x6c, 0x4f,
	0x62, 0x6a, 0x49, 0x44, 0x12, 0x6b, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x2e, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x68, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x2e, 0x45, 0x32, 0x53,
	0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x67,
	0x72, 0x61, 0x6e, 0x75, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x63, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x2d, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x3a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x44,
	0x22, 0xc2, 0x01, 0x0a, 0x17, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x87, 0x01, 0x0a,
	0x19, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x48, 0x00, 0x52, 0x32, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x3a, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1d, 0x0a, 0x1b, 0x65, 0x32, 0x5f, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x86, 0x04, 0x0a, 0x1e, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70,
	0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x67, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x31,
	0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x3a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x4f, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x33, 0x45,
	0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x3a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2c, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50,
	0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2c, 0x45, 0x32, 0x53, 0x4d,
	0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x2c, 0x45,
	0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x3a, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x61, 0x0a, 0x0b, 0x6b,
	0x70, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x52, 0x2b, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x31, 0x3a, 0x6b, 0x70, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0xc8,
	0x01, 0x0a, 0x18, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x1a,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x31, 0x48, 0x00, 0x52, 0x34, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x3a,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x42, 0x1e, 0x0a, 0x1c, 0x65, 0x32, 0x5f,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa2, 0x04, 0x0a, 0x1f, 0x45, 0x32,
	0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x12, 0x64, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x2e, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x44, 0x12, 0x5f, 0x0a, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x2c, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d,
	0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x63, 0x65, 0x6c, 0x6c, 0x4f,
	0x62, 0x6a, 0x49, 0x44, 0x12, 0x69, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x72, 0x61,
	0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x2f,
	0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x31, 0x3a, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x6c, 0x0a, 0x0e, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b,
	0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x2f, 0x45, 0x32,
	0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x31,
	0x3a, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a,
	0x09, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x2b, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x31, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0xab,
	0x04, 0x0a, 0x1d, 0x45, 0x32, 0x53, 0x6d, 0x4b, 0x70, 0x6d, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x6d, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x31, 0x45, 0x32,
	0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d, 0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x7a, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x4b,
	0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92,
	0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08, 0x52, 0x32, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50,
	0x4d, 0x2d, 0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x4b, 0x50,
	0x4d, 0x5f, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x97, 0x01, 0x0a, 0x1c,
	0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x3b, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b,
	0x50, 0x4d, 0x2d, 0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d,
	0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01,
	0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x35, 0x45, 0x32, 0x53, 0x4d, 0x2d, 0x4b, 0x50, 0x4d, 0x2d,
	0x52, 0x41, 0x4e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfd, 0x01, 0x0a,
	0x0e, 0x52, 0x69, 0x63, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x5c, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x6b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x73, 0x6d,
	0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4b, 0x70, 0x6d, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x21, 0x52, 0x49, 0x43, 0x2d,
	0x4b, 0x50, 0x4d, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63,
	0x5f, 0x4b, 0x50, 0x4d, 0x4e, 0x6f, 0x64, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x8c, 0x01,
	0x0a, 0x1c, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x0c, 0xfa, 0x42, 0x09, 0x92, 0x01, 0x06, 0x08, 0x01, 0x10, 0x80, 0x80, 0x01, 0x52, 0x2d, 0x52,
	0x49, 0x43, 0x2d, 0x4b, 0x50, 0x4d, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a,
	0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe1, 0x01, 0x0a,
	0x19, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x61, 0x0a, 0x0e, 0x63, 0x65,
	0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x52, 0x2b, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x49, 0x44, 0x12, 0x61, 0x0a,
	0x0e, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d,
	0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x49, 0x64, 0x52, 0x2b, 0x43, 0x65, 0x6c, 0x6c, 0x2d, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2d, 0x49, 0x74, 0x65,
	0x6d, 0x3a, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x49, 0x44,
	0x22, 0x8e, 0x03, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x79, 0x0a,
	0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x35, 0x52, 0x49, 0x43, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69,
	0x63, 0x5f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x35, 0x52, 0x49,
	0x43, 0x2d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x7c, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73,
	0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x36, 0x52, 0x49, 0x43, 0x2d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xc7, 0x05, 0x0a, 0x12, 0x52, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x66, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b,
	0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x29, 0x52, 0x49, 0x43, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x66, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x29, 0x52,
	0x49, 0x43, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49,
	0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f,
	0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x2a, 0x52, 0x49, 0x43, 0x2d, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69,
	0x63, 0x5f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x73, 0x0a, 0x15, 0x6d, 0x65, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x29, 0x52,
	0x49, 0x43, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49,
	0x74, 0x65, 0x6d, 0x3a, 0x6d, 0x65, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76,
	0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x34, 0x52, 0x49, 0x43, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x22, 0x72, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d,
	0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x35, 0x52, 0x49, 0x43, 0x2d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x2d, 0x49, 0x74, 0x65, 0x6d, 0x3a, 0x72, 0x69, 0x63, 0x5f, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x0c, 0x52,
	0x69, 0x63, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72,
	0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x14, 0x52, 0x49, 0x43, 0x2d, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x2d, 0x4e, 0x61, 0x6d, 0x65, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x0c,
	0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x72, 0x05, 0x10, 0x00, 0x18, 0x90, 0x03, 0x52, 0x12, 0x43, 0x65, 0x6c, 0x6c, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x96, 0x01, 0x52, 0x19, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x0c, 0x50, 0x6c, 0x6d, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x03,
	0x52, 0x13, 0x50, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x7a, 0x02, 0x68, 0x04, 0x52, 0x0f, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x3a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x11, 0x45,
	0x75, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x17, 0x45, 0x55, 0x54, 0x52,
	0x41, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x0e, 0x4e, 0x72, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f,
	0x76, 0x32, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x14, 0x4e, 0x52, 0x43, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x3a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x09, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x42, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x3a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x18, 0x40, 0x52, 0x0e, 0x42, 0x49, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x3a, 0x6c, 0x65, 0x6e, 0x2a, 0x13, 0x0a, 0x03, 0x53, 0x55, 0x4d,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x4d, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x2a, 0x2f,
	0x0a, 0x10, 0x50, 0x72, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x52, 0x45, 0x5f, 0x4c, 0x41, 0x42, 0x45, 0x4c, 0x5f,
	0x4f, 0x56, 0x45, 0x52, 0x52, 0x49, 0x44, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x00, 0x2a,
	0x3d, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x45, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x01, 0x42, 0x5a,
	0x5a, 0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32,
	0x2d, 0x73, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x65, 0x32, 0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x76, 0x32, 0x2f, 0x76, 0x32,
	0x2f, 0x65, 0x32, 0x73, 0x6d, 0x2d, 0x6b, 0x70, 0x6d, 0x2d, 0x69, 0x65, 0x73, 0x3b, 0x65, 0x32,
	0x73, 0x6d, 0x5f, 0x6b, 0x70, 0x6d, 0x5f, 0x69, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescOnce sync.Once
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescData = file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDesc
)

func file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescGZIP() []byte {
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescOnce.Do(func() {
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescData)
	})
	return file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDescData
}

var file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 67)
var file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_goTypes = []interface{}{
	(SUM)(0),                                     // 0: e2sm_kpm_v2.v2.SUM
	(PreLabelOverride)(0),                        // 1: e2sm_kpm_v2.v2.PreLabelOverride
	(StartEndInd)(0),                             // 2: e2sm_kpm_v2.v2.StartEndInd
	(*Eutracgi)(nil),                             // 3: e2sm_kpm_v2.v2.Eutracgi
	(*Nrcgi)(nil),                                // 4: e2sm_kpm_v2.v2.Nrcgi
	(*CellGlobalId)(nil),                         // 5: e2sm_kpm_v2.v2.CellGlobalId
	(*Snssai)(nil),                               // 6: e2sm_kpm_v2.v2.Snssai
	(*FiveQi)(nil),                               // 7: e2sm_kpm_v2.v2.FiveQi
	(*Qci)(nil),                                  // 8: e2sm_kpm_v2.v2.Qci
	(*Arp)(nil),                                  // 9: e2sm_kpm_v2.v2.Arp
	(*GranularityPeriod)(nil),                    // 10: e2sm_kpm_v2.v2.GranularityPeriod
	(*MeasurementType)(nil),                      // 11: e2sm_kpm_v2.v2.MeasurementType
	(*MeasurementTypeId)(nil),                    // 12: e2sm_kpm_v2.v2.MeasurementTypeId
	(*MeasurementLabel)(nil),                     // 13: e2sm_kpm_v2.v2.MeasurementLabel
	(*SubscriptionId)(nil),                       // 14: e2sm_kpm_v2.v2.SubscriptionId
	(*GlobalKpmnodeId)(nil),                      // 15: e2sm_kpm_v2.v2.GlobalKpmnodeId
	(*GlobalKpmnodeGnbId)(nil),                   // 16: e2sm_kpm_v2.v2.GlobalKpmnodeGnbId
	(*GlobalgNbId)(nil),                          // 17: e2sm_kpm_v2.v2.GlobalgNbId
	(*GnbCuUpId)(nil),                            // 18: e2sm_kpm_v2.v2.GnbCuUpId
	(*GnbDuId)(nil),                              // 19: e2sm_kpm_v2.v2.GnbDuId
	(*GnbIdChoice)(nil),                          // 20: e2sm_kpm_v2.v2.GnbIdChoice
	(*GlobalKpmnodeEnGnbId)(nil),                 // 21: e2sm_kpm_v2.v2.GlobalKpmnodeEnGnbId
	(*GlobalenGnbId)(nil),                        // 22: e2sm_kpm_v2.v2.GlobalenGnbId
	(*EngnbId)(nil),                              // 23: e2sm_kpm_v2.v2.EngnbId
	(*GlobalKpmnodeNgEnbId)(nil),                 // 24: e2sm_kpm_v2.v2.GlobalKpmnodeNgEnbId
	(*GlobalngeNbId)(nil),                        // 25: e2sm_kpm_v2.v2.GlobalngeNbId
	(*EnbIdChoice)(nil),                          // 26: e2sm_kpm_v2.v2.EnbIdChoice
	(*GlobalKpmnodeEnbId)(nil),                   // 27: e2sm_kpm_v2.v2.GlobalKpmnodeEnbId
	(*GlobalEnbId)(nil),                          // 28: e2sm_kpm_v2.v2.GlobalEnbId
	(*EnbId)(nil),                                // 29: e2sm_kpm_v2.v2.EnbId
	(*RanfunctionName)(nil),                      // 30: e2sm_kpm_v2.v2.RanfunctionName
	(*RicStyleType)(nil),                         // 31: e2sm_kpm_v2.v2.RicStyleType
	(*RicFormatType)(nil),                        // 32: e2sm_kpm_v2.v2.RicFormatType
	(*MaxnoofKpmnodes)(nil),                      // 33: e2sm_kpm_v2.v2.MaxnoofKpmnodes
	(*MaxnoofCells)(nil),                         // 34: e2sm_kpm_v2.v2.MaxnoofCells
	(*MaxnoofRicstyles)(nil),                     // 35: e2sm_kpm_v2.v2.MaxnoofRicstyles
	(*MaxnoofMeasurementInfo)(nil),               // 36: e2sm_kpm_v2.v2.MaxnoofMeasurementInfo
	(*MaxnoofLabelInfo)(nil),                     // 37: e2sm_kpm_v2.v2.MaxnoofLabelInfo
	(*MaxnoofMeasurementRecord)(nil),             // 38: e2sm_kpm_v2.v2.MaxnoofMeasurementRecord
	(*MaxnoofMeasurementValue)(nil),              // 39: e2sm_kpm_v2.v2.MaxnoofMeasurementValue
	(*MeasurementInfoList)(nil),                  // 40: e2sm_kpm_v2.v2.MeasurementInfoList
	(*MeasurementInfoItem)(nil),                  // 41: e2sm_kpm_v2.v2.MeasurementInfoItem
	(*LabelInfoList)(nil),                        // 42: e2sm_kpm_v2.v2.LabelInfoList
	(*LabelInfoItem)(nil),                        // 43: e2sm_kpm_v2.v2.LabelInfoItem
	(*MeasurementData)(nil),                      // 44: e2sm_kpm_v2.v2.MeasurementData
	(*MeasurementRecord)(nil),                    // 45: e2sm_kpm_v2.v2.MeasurementRecord
	(*MeasurementRecordItem)(nil),                // 46: e2sm_kpm_v2.v2.MeasurementRecordItem
	(*MeasurementInfoActionList)(nil),            // 47: e2sm_kpm_v2.v2.MeasurementInfoActionList
	(*MeasurementInfoActionItem)(nil),            // 48: e2sm_kpm_v2.v2.MeasurementInfoActionItem
	(*E2SmKpmEventTriggerDefinition)(nil),        // 49: e2sm_kpm_v2.v2.E2SmKpmEventTriggerDefinition
	(*E2SmKpmEventTriggerDefinitionFormat1)(nil), // 50: e2sm_kpm_v2.v2.E2SmKpmEventTriggerDefinitionFormat1
	(*E2SmKpmActionDefinition)(nil),              // 51: e2sm_kpm_v2.v2.E2SmKpmActionDefinition
	(*E2SmKpmActionDefinitionFormat1)(nil),       // 52: e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1
	(*E2SmKpmIndicationHeader)(nil),              // 53: e2sm_kpm_v2.v2.E2SmKpmIndicationHeader
	(*E2SmKpmIndicationHeaderFormat1)(nil),       // 54: e2sm_kpm_v2.v2.E2SmKpmIndicationHeaderFormat1
	(*E2SmKpmIndicationMessage)(nil),             // 55: e2sm_kpm_v2.v2.E2SmKpmIndicationMessage
	(*E2SmKpmIndicationMessageFormat1)(nil),      // 56: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1
	(*E2SmKpmRanfunctionDescription)(nil),        // 57: e2sm_kpm_v2.v2.E2SmKpmRanfunctionDescription
	(*RicKpmnodeItem)(nil),                       // 58: e2sm_kpm_v2.v2.RicKpmnodeItem
	(*CellMeasurementObjectItem)(nil),            // 59: e2sm_kpm_v2.v2.CellMeasurementObjectItem
	(*RicEventTriggerStyleItem)(nil),             // 60: e2sm_kpm_v2.v2.RicEventTriggerStyleItem
	(*RicReportStyleItem)(nil),                   // 61: e2sm_kpm_v2.v2.RicReportStyleItem
	(*RicStyleName)(nil),                         // 62: e2sm_kpm_v2.v2.RicStyleName
	(*CellObjectId)(nil),                         // 63: e2sm_kpm_v2.v2.CellObjectId
	(*MeasurementTypeName)(nil),                  // 64: e2sm_kpm_v2.v2.MeasurementTypeName
	(*PlmnIdentity)(nil),                         // 65: e2sm_kpm_v2.v2.PlmnIdentity
	(*TimeStamp)(nil),                            // 66: e2sm_kpm_v2.v2.TimeStamp
	(*EutracellIdentity)(nil),                    // 67: e2sm_kpm_v2.v2.EutracellIdentity
	(*NrcellIdentity)(nil),                       // 68: e2sm_kpm_v2.v2.NrcellIdentity
	(*BitString)(nil),                            // 69: e2sm_kpm_v2.v2.BitString
}
var file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_depIdxs = []int32{
	65, // 0: e2sm_kpm_v2.v2.Eutracgi.p_lmn_identity:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	67, // 1: e2sm_kpm_v2.v2.Eutracgi.e_utracell_identity:type_name -> e2sm_kpm_v2.v2.EutracellIdentity
	65, // 2: e2sm_kpm_v2.v2.Nrcgi.p_lmn_identity:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	68, // 3: e2sm_kpm_v2.v2.Nrcgi.n_rcell_identity:type_name -> e2sm_kpm_v2.v2.NrcellIdentity
	4,  // 4: e2sm_kpm_v2.v2.CellGlobalId.nr_cgi:type_name -> e2sm_kpm_v2.v2.Nrcgi
	3,  // 5: e2sm_kpm_v2.v2.CellGlobalId.e_utra_cgi:type_name -> e2sm_kpm_v2.v2.Eutracgi
	64, // 6: e2sm_kpm_v2.v2.MeasurementType.meas_name:type_name -> e2sm_kpm_v2.v2.MeasurementTypeName
	12, // 7: e2sm_kpm_v2.v2.MeasurementType.meas_id:type_name -> e2sm_kpm_v2.v2.MeasurementTypeId
	65, // 8: e2sm_kpm_v2.v2.MeasurementLabel.plmn_id:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	6,  // 9: e2sm_kpm_v2.v2.MeasurementLabel.slice_id:type_name -> e2sm_kpm_v2.v2.Snssai
	7,  // 10: e2sm_kpm_v2.v2.MeasurementLabel.five_qi:type_name -> e2sm_kpm_v2.v2.FiveQi
	8,  // 11: e2sm_kpm_v2.v2.MeasurementLabel.q_ci:type_name -> e2sm_kpm_v2.v2.Qci
	8,  // 12: e2sm_kpm_v2.v2.MeasurementLabel.q_cimax:type_name -> e2sm_kpm_v2.v2.Qci
	8,  // 13: e2sm_kpm_v2.v2.MeasurementLabel.q_cimin:type_name -> e2sm_kpm_v2.v2.Qci
	9,  // 14: e2sm_kpm_v2.v2.MeasurementLabel.a_rpmax:type_name -> e2sm_kpm_v2.v2.Arp
	9,  // 15: e2sm_kpm_v2.v2.MeasurementLabel.a_rpmin:type_name -> e2sm_kpm_v2.v2.Arp
	0,  // 16: e2sm_kpm_v2.v2.MeasurementLabel.s_um:type_name -> e2sm_kpm_v2.v2.SUM
	1,  // 17: e2sm_kpm_v2.v2.MeasurementLabel.pre_label_override:type_name -> e2sm_kpm_v2.v2.PreLabelOverride
	2,  // 18: e2sm_kpm_v2.v2.MeasurementLabel.start_end_ind:type_name -> e2sm_kpm_v2.v2.StartEndInd
	16, // 19: e2sm_kpm_v2.v2.GlobalKpmnodeId.g_nb:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeGnbId
	21, // 20: e2sm_kpm_v2.v2.GlobalKpmnodeId.en_g_nb:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeEnGnbId
	24, // 21: e2sm_kpm_v2.v2.GlobalKpmnodeId.ng_e_nb:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeNgEnbId
	27, // 22: e2sm_kpm_v2.v2.GlobalKpmnodeId.e_nb:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeEnbId
	17, // 23: e2sm_kpm_v2.v2.GlobalKpmnodeGnbId.global_g_nb_id:type_name -> e2sm_kpm_v2.v2.GlobalgNbId
	18, // 24: e2sm_kpm_v2.v2.GlobalKpmnodeGnbId.g_nb_cu_up_id:type_name -> e2sm_kpm_v2.v2.GnbCuUpId
	19, // 25: e2sm_kpm_v2.v2.GlobalKpmnodeGnbId.g_nb_du_id:type_name -> e2sm_kpm_v2.v2.GnbDuId
	65, // 26: e2sm_kpm_v2.v2.GlobalgNbId.plmn_id:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	20, // 27: e2sm_kpm_v2.v2.GlobalgNbId.gnb_id:type_name -> e2sm_kpm_v2.v2.GnbIdChoice
	69, // 28: e2sm_kpm_v2.v2.GnbIdChoice.gnb_id:type_name -> e2sm_kpm_v2.v2.BitString
	22, // 29: e2sm_kpm_v2.v2.GlobalKpmnodeEnGnbId.global_g_nb_id:type_name -> e2sm_kpm_v2.v2.GlobalenGnbId
	18, // 30: e2sm_kpm_v2.v2.GlobalKpmnodeEnGnbId.g_nb_cu_up_id:type_name -> e2sm_kpm_v2.v2.GnbCuUpId
	19, // 31: e2sm_kpm_v2.v2.GlobalKpmnodeEnGnbId.g_nb_du_id:type_name -> e2sm_kpm_v2.v2.GnbDuId
	65, // 32: e2sm_kpm_v2.v2.GlobalenGnbId.p_lmn_identity:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	23, // 33: e2sm_kpm_v2.v2.GlobalenGnbId.g_nb_id:type_name -> e2sm_kpm_v2.v2.EngnbId
	69, // 34: e2sm_kpm_v2.v2.EngnbId.g_nb_id:type_name -> e2sm_kpm_v2.v2.BitString
	25, // 35: e2sm_kpm_v2.v2.GlobalKpmnodeNgEnbId.global_ng_e_nb_id:type_name -> e2sm_kpm_v2.v2.GlobalngeNbId
	19, // 36: e2sm_kpm_v2.v2.GlobalKpmnodeNgEnbId.g_nb_du_id:type_name -> e2sm_kpm_v2.v2.GnbDuId
	65, // 37: e2sm_kpm_v2.v2.GlobalngeNbId.plmn_id:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	26, // 38: e2sm_kpm_v2.v2.GlobalngeNbId.enb_id:type_name -> e2sm_kpm_v2.v2.EnbIdChoice
	69, // 39: e2sm_kpm_v2.v2.GlobalngeNbId.short_macro_e_nb_id:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 40: e2sm_kpm_v2.v2.GlobalngeNbId.long_macro_e_nb_id:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 41: e2sm_kpm_v2.v2.EnbIdChoice.enb_id_macro:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 42: e2sm_kpm_v2.v2.EnbIdChoice.enb_id_shortmacro:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 43: e2sm_kpm_v2.v2.EnbIdChoice.enb_id_longmacro:type_name -> e2sm_kpm_v2.v2.BitString
	28, // 44: e2sm_kpm_v2.v2.GlobalKpmnodeEnbId.global_e_nb_id:type_name -> e2sm_kpm_v2.v2.GlobalEnbId
	65, // 45: e2sm_kpm_v2.v2.GlobalEnbId.p_lmn_identity:type_name -> e2sm_kpm_v2.v2.PlmnIdentity
	29, // 46: e2sm_kpm_v2.v2.GlobalEnbId.e_nb_id:type_name -> e2sm_kpm_v2.v2.EnbId
	69, // 47: e2sm_kpm_v2.v2.EnbId.macro_e_nb_id:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 48: e2sm_kpm_v2.v2.EnbId.home_e_nb_id:type_name -> e2sm_kpm_v2.v2.BitString
	41, // 49: e2sm_kpm_v2.v2.MeasurementInfoList.value:type_name -> e2sm_kpm_v2.v2.MeasurementInfoItem
	11, // 50: e2sm_kpm_v2.v2.MeasurementInfoItem.meas_type:type_name -> e2sm_kpm_v2.v2.MeasurementType
	42, // 51: e2sm_kpm_v2.v2.MeasurementInfoItem.label_info_list:type_name -> e2sm_kpm_v2.v2.LabelInfoList
	43, // 52: e2sm_kpm_v2.v2.LabelInfoList.value:type_name -> e2sm_kpm_v2.v2.LabelInfoItem
	13, // 53: e2sm_kpm_v2.v2.LabelInfoItem.meas_label:type_name -> e2sm_kpm_v2.v2.MeasurementLabel
	45, // 54: e2sm_kpm_v2.v2.MeasurementData.value:type_name -> e2sm_kpm_v2.v2.MeasurementRecord
	46, // 55: e2sm_kpm_v2.v2.MeasurementRecord.value:type_name -> e2sm_kpm_v2.v2.MeasurementRecordItem
	48, // 56: e2sm_kpm_v2.v2.MeasurementInfoActionList.value:type_name -> e2sm_kpm_v2.v2.MeasurementInfoActionItem
	64, // 57: e2sm_kpm_v2.v2.MeasurementInfoActionItem.meas_name:type_name -> e2sm_kpm_v2.v2.MeasurementTypeName
	12, // 58: e2sm_kpm_v2.v2.MeasurementInfoActionItem.meas_id:type_name -> e2sm_kpm_v2.v2.MeasurementTypeId
	50, // 59: e2sm_kpm_v2.v2.E2SmKpmEventTriggerDefinition.event_definition_format1:type_name -> e2sm_kpm_v2.v2.E2SmKpmEventTriggerDefinitionFormat1
	31, // 60: e2sm_kpm_v2.v2.E2SmKpmActionDefinition.ric_style_type:type_name -> e2sm_kpm_v2.v2.RicStyleType
	52, // 61: e2sm_kpm_v2.v2.E2SmKpmActionDefinition.action_definition_format1:type_name -> e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1
	63, // 62: e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1.cell_obj_id:type_name -> e2sm_kpm_v2.v2.CellObjectId
	40, // 63: e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1.meas_info_list:type_name -> e2sm_kpm_v2.v2.MeasurementInfoList
	10, // 64: e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1.granul_period:type_name -> e2sm_kpm_v2.v2.GranularityPeriod
	14, // 65: e2sm_kpm_v2.v2.E2SmKpmActionDefinitionFormat1.subscript_id:type_name -> e2sm_kpm_v2.v2.SubscriptionId
	54, // 66: e2sm_kpm_v2.v2.E2SmKpmIndicationHeader.indication_header_format1:type_name -> e2sm_kpm_v2.v2.E2SmKpmIndicationHeaderFormat1
	66, // 67: e2sm_kpm_v2.v2.E2SmKpmIndicationHeaderFormat1.collet_start_time:type_name -> e2sm_kpm_v2.v2.TimeStamp
	15, // 68: e2sm_kpm_v2.v2.E2SmKpmIndicationHeaderFormat1.kpm_node_id:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeId
	56, // 69: e2sm_kpm_v2.v2.E2SmKpmIndicationMessage.indication_message_format1:type_name -> e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1
	14, // 70: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1.subscript_id:type_name -> e2sm_kpm_v2.v2.SubscriptionId
	63, // 71: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1.cell_obj_id:type_name -> e2sm_kpm_v2.v2.CellObjectId
	10, // 72: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1.granul_period:type_name -> e2sm_kpm_v2.v2.GranularityPeriod
	40, // 73: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1.meas_info_list:type_name -> e2sm_kpm_v2.v2.MeasurementInfoList
	44, // 74: e2sm_kpm_v2.v2.E2SmKpmIndicationMessageFormat1.meas_data:type_name -> e2sm_kpm_v2.v2.MeasurementData
	30, // 75: e2sm_kpm_v2.v2.E2SmKpmRanfunctionDescription.ran_function_name:type_name -> e2sm_kpm_v2.v2.RanfunctionName
	58, // 76: e2sm_kpm_v2.v2.E2SmKpmRanfunctionDescription.ric_kpm_node_list:type_name -> e2sm_kpm_v2.v2.RicKpmnodeItem
	60, // 77: e2sm_kpm_v2.v2.E2SmKpmRanfunctionDescription.ric_event_trigger_style_list:type_name -> e2sm_kpm_v2.v2.RicEventTriggerStyleItem
	61, // 78: e2sm_kpm_v2.v2.E2SmKpmRanfunctionDescription.ric_report_style_list:type_name -> e2sm_kpm_v2.v2.RicReportStyleItem
	15, // 79: e2sm_kpm_v2.v2.RicKpmnodeItem.ric_kpmnode_type:type_name -> e2sm_kpm_v2.v2.GlobalKpmnodeId
	59, // 80: e2sm_kpm_v2.v2.RicKpmnodeItem.cell_measurement_object_list:type_name -> e2sm_kpm_v2.v2.CellMeasurementObjectItem
	63, // 81: e2sm_kpm_v2.v2.CellMeasurementObjectItem.cell_object_id:type_name -> e2sm_kpm_v2.v2.CellObjectId
	5,  // 82: e2sm_kpm_v2.v2.CellMeasurementObjectItem.cell_global_id:type_name -> e2sm_kpm_v2.v2.CellGlobalId
	31, // 83: e2sm_kpm_v2.v2.RicEventTriggerStyleItem.ric_event_trigger_style_type:type_name -> e2sm_kpm_v2.v2.RicStyleType
	62, // 84: e2sm_kpm_v2.v2.RicEventTriggerStyleItem.ric_event_trigger_style_name:type_name -> e2sm_kpm_v2.v2.RicStyleName
	32, // 85: e2sm_kpm_v2.v2.RicEventTriggerStyleItem.ric_event_trigger_format_type:type_name -> e2sm_kpm_v2.v2.RicFormatType
	31, // 86: e2sm_kpm_v2.v2.RicReportStyleItem.ric_report_style_type:type_name -> e2sm_kpm_v2.v2.RicStyleType
	62, // 87: e2sm_kpm_v2.v2.RicReportStyleItem.ric_report_style_name:type_name -> e2sm_kpm_v2.v2.RicStyleName
	32, // 88: e2sm_kpm_v2.v2.RicReportStyleItem.ric_action_format_type:type_name -> e2sm_kpm_v2.v2.RicFormatType
	47, // 89: e2sm_kpm_v2.v2.RicReportStyleItem.meas_info_action_list:type_name -> e2sm_kpm_v2.v2.MeasurementInfoActionList
	32, // 90: e2sm_kpm_v2.v2.RicReportStyleItem.ric_indication_header_format_type:type_name -> e2sm_kpm_v2.v2.RicFormatType
	32, // 91: e2sm_kpm_v2.v2.RicReportStyleItem.ric_indication_message_format_type:type_name -> e2sm_kpm_v2.v2.RicFormatType
	69, // 92: e2sm_kpm_v2.v2.EutracellIdentity.value:type_name -> e2sm_kpm_v2.v2.BitString
	69, // 93: e2sm_kpm_v2.v2.NrcellIdentity.value:type_name -> e2sm_kpm_v2.v2.BitString
	94, // [94:94] is the sub-list for method output_type
	94, // [94:94] is the sub-list for method input_type
	94, // [94:94] is the sub-list for extension type_name
	94, // [94:94] is the sub-list for extension extendee
	0,  // [0:94] is the sub-list for field type_name
}

func init() { file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_init() }
func file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_init() {
	if File_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eutracgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nrcgi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellGlobalId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snssai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiveQi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qci); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Arp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranularityPeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalKpmnodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalKpmnodeGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalgNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalKpmnodeEnGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalKpmnodeNgEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalngeNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalKpmnodeEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicFormatType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofKpmnodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofCells); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofRicstyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofLabelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxnoofMeasurementValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelInfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementRecordItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementInfoActionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmEventTriggerDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmEventTriggerDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmActionDefinitionFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmIndicationHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmIndicationHeaderFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmIndicationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmIndicationMessageFormat1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SmKpmRanfunctionDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicKpmnodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellMeasurementObjectItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicEventTriggerStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicReportStyleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicStyleName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellObjectId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementTypeName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlmnIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EutracellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NrcellIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BitString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CellGlobalId_NrCgi)(nil),
		(*CellGlobalId_EUtraCgi)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*MeasurementType_MeasName)(nil),
		(*MeasurementType_MeasId)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*GlobalKpmnodeId_GNb)(nil),
		(*GlobalKpmnodeId_EnGNb)(nil),
		(*GlobalKpmnodeId_NgENb)(nil),
		(*GlobalKpmnodeId_ENb)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*GnbIdChoice_GnbId)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*EngnbId_GNbId)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*EnbIdChoice_EnbIdMacro)(nil),
		(*EnbIdChoice_EnbIdShortmacro)(nil),
		(*EnbIdChoice_EnbIdLongmacro)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*EnbId_MacroENbId)(nil),
		(*EnbId_HomeENbId)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*MeasurementRecordItem_Integer)(nil),
		(*MeasurementRecordItem_Real)(nil),
		(*MeasurementRecordItem_NoValue)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*E2SmKpmEventTriggerDefinition_EventDefinitionFormat1)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*E2SmKpmActionDefinition_ActionDefinitionFormat1)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*E2SmKpmIndicationHeader_IndicationHeaderFormat1)(nil),
	}
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*E2SmKpmIndicationMessage_IndicationMessageFormat1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   67,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_goTypes,
		DependencyIndexes: file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_depIdxs,
		EnumInfos:         file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_enumTypes,
		MessageInfos:      file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_msgTypes,
	}.Build()
	File_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto = out.File
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_rawDesc = nil
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_goTypes = nil
	file_e2sm_kpm_v2_v2_e2sm_kpm_v2_proto_depIdxs = nil
}
