/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package interface.e2ap;

import "github.com/onosproject/onos-ric/api/sb/e2sm/e2sm.proto";

//-- **************************************************************
//--
//-- Interface Elementary Procedure List
//--
//-- **************************************************************
//
//E2AP-ELEMENTARY-PROCEDURES E2AP-ELEMENTARY-PROCEDURE ::= {
//    E2AP-ELEMENTARY-PROCEDURES-CLASS-1                    |
//    E2AP-ELEMENTARY-PROCEDURES-CLASS-2,
//    ...
//}
//
//E2AP-ELEMENTARY-PROCEDURES-CLASS-1 E2AP-ELEMENTARY-PROCEDURE ::= {
//    ricSubscription                                        |
//    ricSubscriptionDelete                                |
//    ricServiceUpdate                                    |
//    ricControl                                            |
//    e2setup                                                |
//    reset,
//    ...
//}
//
//	ricSubscription E2AP-ELEMENTARY-PROCEDURE ::= {
//		INITIATING MESSAGE        RICsubscriptionRequest
//		SUCCESSFUL OUTCOME        RICsubscriptionResponse
//		UNSUCCESSFUL OUTCOME    RICsubscriptionFailure
//		PROCEDURE CODE            id-RICsubscription
//		CRITICALITY                reject
//	}
//
//	ricControl E2AP-ELEMENTARY-PROCEDURE ::= {
//		INITIATING MESSAGE        RICcontrolRequest
//		SUCCESSFUL OUTCOME        RICcontrolAcknowledge
//		UNSUCCESSFUL OUTCOME    RICcontrolFailure
//		PROCEDURE CODE            id-RICcontrol
//		CRITICALITY                reject
//	}
//
//ricIndication E2AP-ELEMENTARY-PROCEDURE ::= {
//    INITIATING MESSAGE        RICindication
//    PROCEDURE CODE            id-RICindication
//    CRITICALITY                ignore
//}


service E2AP {

    // E2 AP defines three primary messages, Subscription, Indication and Control.
    // Indication is any message that is sent by E2 Node to RIC.
    // Control are control plane messages sent by RIC to E2 Node , e.g. Hand-over request message
    // Subscription are configuration messages sent by RIC to E2 Node to subscribe to events/reports from E2 Node (e.g. telemetry)

    // RicSubscribe is a unary service for the RIC to subscribe to events/reports from E2 Node
    rpc RicSubscribe (RicSubscriptionRequest) returns (RicSubscriptionResponse) {}

    // RicChan is a bi-directonal stream for all E2AP Control
    // and E2AP Indication messaging between RIC and E2-Node
    rpc RicChan (stream RicControlRequest) returns (stream RicIndication) {}
}


//-- **************************************************************
//--
//-- RIC SUBSCRIPTION REQUEST
//--
//-- **************************************************************
//RICsubscriptionRequest ::= SEQUENCE {
//    protocolIEs                    ProtocolIE-Container    {{RICsubscriptionRequest-IEs}},
//    ...
//}
//
//RICsubscriptionRequest-IEs E2AP-PROTOCOL-IES ::= {
//    { ID id-RICrequestID                CRITICALITY reject    TYPE RICrequestID                    PRESENCE mandatory}|
//    { ID id-RANfunctionID                CRITICALITY reject    TYPE RANfunctionID                    PRESENCE mandatory}|
//    { ID id-RICsubscriptionDetails        CRITICALITY reject    TYPE RICsubscriptionDetails            PRESENCE mandatory},
//    ...
//}
//
//
//RICsubscriptionDetails ::= SEQUENCE {
//    ricEventTriggerDefinition    RICeventTriggerDefinition,
//    ricAction-ToBeSetup-List    RICactions-ToBeSetup-List,
//    ...
//}
//
//RICactions-ToBeSetup-List ::= SEQUENCE (SIZE(1..maxofRICactionID)) OF ProtocolIE-SingleContainer { {RICaction-ToBeSetup-ItemIEs} }
//
//RICaction-ToBeSetup-ItemIEs     E2AP-PROTOCOL-IES ::= {
//    { ID id-RICaction-ToBeSetup-Item    CRITICALITY ignore     TYPE RICaction-ToBeSetup-Item     PRESENCE mandatory },
//    ...
//}
//
//RICaction-ToBeSetup-Item ::= SEQUENCE {
//    ricActionID                    RICactionID,
//    ricActionType                RICactionType,
//    ricActionDefinition            RICactionDefinition     OPTIONAL,
//    ricSubsequentAction            RICsubsequentAction     OPTIONAL,
//    ...
//}

message RicSubscriptionRequest {
	interface.e2sm.RicSubscriptionHeader hdr = 1;
	interface.e2sm.RicSubscriptionMessage msg = 2;
}

//-- **************************************************************
//--
//-- RIC SUBSCRIPTION RESPONSE
//--
//-- **************************************************************
//RICsubscriptionResponse ::= SEQUENCE {
//    protocolIEs                    ProtocolIE-Container{{RICsubscriptionResponse-IEs}},
//    ...
//}
//
//RICsubscriptionResponse-IEs E2AP-PROTOCOL-IES ::= {
//    { ID id-RICrequestID                CRITICALITY reject        TYPE RICrequestID                PRESENCE mandatory } |
//    { ID id-RANfunctionID                CRITICALITY reject        TYPE RANfunctionID                PRESENCE mandatory } |
//    { ID id-RICactions-Admitted            CRITICALITY reject        TYPE RICaction-Admitted-List    PRESENCE mandatory } |
//    { ID id-RICactions-NotAdmitted        CRITICALITY reject        TYPE RICaction-NotAdmitted-List    PRESENCE optional },
//    ...    
//}

message RicSubscriptionResponse {
}

//-- **************************************************************
//--
//-- RIC INDICATION
//--
//-- **************************************************************
//RICindication ::= SEQUENCE {
//    protocolIEs                    ProtocolIE-Container    {{RICindication-IEs}},
//    ...
//}
//
//RICindication-IEs E2AP-PROTOCOL-IES ::= {
//    { ID id-RICrequestID                CRITICALITY reject    TYPE RICrequestID                    PRESENCE mandatory    }|
//    { ID id-RANfunctionID                CRITICALITY reject    TYPE RANfunctionID                    PRESENCE mandatory    }|
//    { ID id-RICactionID                    CRITICALITY reject    TYPE RICactionID                    PRESENCE mandatory    }|
//    { ID id-RICindicationSN                CRITICALITY reject    TYPE RICindicationSN                PRESENCE optional    }|
//    { ID id-RICindicationType            CRITICALITY reject    TYPE RICindicationType              PRESENCE mandatory    }|
//    { ID id-RICindicationHeader            CRITICALITY reject    TYPE RICindicationHeader            PRESENCE mandatory    }|
//    { ID id-RICindicationMessage        CRITICALITY reject    TYPE RICindicationMessage            PRESENCE mandatory    }|
//    { ID id-RICcallProcessID            CRITICALITY reject    TYPE RICcallProcessID                PRESENCE optional    },
//    ...
//}

message RicIndication {
	interface.e2sm.RicIndicationHeader hdr = 1;
	interface.e2sm.RicIndicationMessage msg = 2;
}

//-- **************************************************************
//--
//-- RIC CONTROL REQUEST
//--
//-- **************************************************************
//RICcontrolRequest ::= SEQUENCE {
//    protocolIEs                    ProtocolIE-Container    {{RICcontrolRequest-IEs}},
//    ...
//}
//
//RICcontrolRequest-IEs E2AP-PROTOCOL-IES ::= {
//    { ID id-RICrequestID                CRITICALITY reject    TYPE RICrequestID                    PRESENCE mandatory    }|
//    { ID id-RANfunctionID                CRITICALITY reject    TYPE RANfunctionID                    PRESENCE mandatory    }|
//    { ID id-RICcallProcessID            CRITICALITY reject    TYPE RICcallProcessID                PRESENCE optional    }|
//    { ID id-RICcontrolHeader            CRITICALITY reject    TYPE RICcontrolHeader                PRESENCE mandatory    }|
//    { ID id-RICcontrolMessage            CRITICALITY reject    TYPE RICcontrolMessage                PRESENCE mandatory    }|
//    { ID id-RICcontrolAckRequest        CRITICALITY reject    TYPE RICcontrolAckRequest            PRESENCE optional    },
//    ...
//}

message RicControlRequest {
	interface.e2sm.RicControlHeader hdr = 1;
	interface.e2sm.RicControlMessage msg = 2;
}
