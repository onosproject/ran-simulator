/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package interface.e2sm;

import "github.com/onosproject/onos-ric/api/sb/e2-interface.proto";

enum SubscriptionMessageType {
    UNKNOWN_MESSAGE = 0;
    L2_MEAS_CONFIG = 1;
}

message RicSubscriptionHeader {
    SubscriptionMessageType messageType = 1;
}

message RicSubscriptionMessage {
    oneof s {
        interface.e2.L2MeasConfig l2MeasConfig = 1;
    }
}

//-- **************************************************************
//-- Following IE defined in E2SM
//-- **************************************************************
//RICindicationHeader ::= OCTET STRING
//RICindicationMessage ::= OCTET STRING
message RicIndicationHeader {
    interface.e2.MessageType messageType = 1;
}
message RicIndicationMessage {
    oneof s {
        interface.e2.RadioMeasReportPerUE radioMeasReportPerUE = 1;
        interface.e2.UEAdmissionRequest uEAdmissionRequest = 2;
        interface.e2.UEReleaseInd uEReleaseInd = 3;
        interface.e2.RadioMeasReportPerCell radioMeasReportPerCell = 4;
        interface.e2.CellConfigReport cellConfigReport = 5;
    }
}

//RICcontrolHeader ::= OCTET STRING
message RicControlHeader {
    interface.e2.MessageType messageType = 1;
    interface.e2.ECGI ecgi = 2;
    repeated string crnti = 3;
}

//-- **************************************************************
//-- Following IE defined in E2SM
//-- **************************************************************
//RICcontrolMessage ::= OCTET STRING
message RicControlMessage {
    oneof s {
        interface.e2.RRMConfig rRMConfig = 1;
        interface.e2.HORequest hORequest = 2;
        interface.e2.CellConfigRequest cellConfigRequest = 3;
        interface.e2.L2MeasConfig l2MeasConfig = 4;
    }
}

/*
    -- **************************************************************
    -- Following IE defined in E2SM
    -- **************************************************************
   RICcontrolOutcome ::= OCTET STRING
*/

message RicControlOutcome {
    oneof s {
        interface.e2.HOComplete hOComplete = 1;
        interface.e2.HOFailure hOFailure = 2;
        interface.e2.RRMConfigStatus rRMConfigStatus = 3;
        interface.e2.CellConfigReport cellConfigReport = 4;
    }
}