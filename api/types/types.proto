/*
Copyright 2020-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package ran.trafficsim.types;

import "gogoproto/gogo.proto";

message Point {
    float lat = 1;

    float lng = 2;
}

message Route {
    uint64 name = 1 [(gogoproto.customname) = "RouteID", (gogoproto.casttype) = "Imsi"];

    repeated Point waypoints = 2;

    string color = 3;
}

message Ue {
    uint64 imsi = 1 [(gogoproto.customname) = "Imsi", (gogoproto.casttype) = "Imsi"];

    string type = 2;

    Point position = 4;

    uint32 rotation = 5;

    ECGI serving_tower = 7;

    float serving_tower_dist = 8;

    ECGI tower1 = 9;

    float tower1_dist = 10;

    ECGI tower2 = 11;

    float tower2_dist = 12;

    ECGI tower3 = 13;

    float tower3_dist = 14;

    string crnti = 15 [(gogoproto.customname) = "Crnti", (gogoproto.casttype) = "Crnti"];

    bool admitted = 16;

    UeMetrics metrics = 17;
}

message UeMetrics {
    // Latency (in nanoseconds) of the most recent hand-over
    int64 ho_latency = 1;

    // Handover report timestamp (in nanoseconds since epoch)
    int64 ho_report_timestamp = 2;

    // flag to indicate the first measurement
    bool isFirst = 3;
}

message TowersParams {
    // Number of rows of towers
	uint32 towerRows = 1;

    // Number of columns of towers
	uint32 towerCols = 2;

    // Tower spacing vert in degrees latitude
    float towerSpacingVert = 3;

    // Tower spacing horiz in degrees longitude
	float towerSpacingHoriz = 4;

    // Ratio of random locations diameter to tower grid width
    float locationsScale = 5;

    // Max num of UEs per tower
    uint32 maxUEsPerTower = 6;
}

// station's unique ID
message ECGI {
    string ecID = 1 [(gogoproto.customname) = "EcID", (gogoproto.casttype) = "EcID"];

    string plmnID = 2 [(gogoproto.customname) = "PlmnID", (gogoproto.casttype) = "PlmnID"];
}

message Tower {
    ECGI ecgi = 1;

    Point location = 3;

    string color = 4;

    uint32 maxUEs = 5;

    repeated ECGI neighbors = 6;

    // The tower transmit power in decibels
    float txPowerdB = 7;

    // crntis maps a ue's name to its crnti
    map<string, uint64> crntiMap = 9 [(gogoproto.castkey) = "Crnti", (gogoproto.castvalue) = "Imsi"];

    uint32 crntiIndex = 10;

    uint32 port = 11;
}

message MapLayout {
    // Map center latitude and longitude
    ran.trafficsim.types.Point center = 1;

    // The starting Zoom level
    float zoom = 2;

    // Show map as faded on start
    bool fade = 3;

    // Show routes on start
    bool showRoutes = 4;

    // Show power as circle on start
    bool showPower = 5;

    // Max number of UEs for complete simulation
    uint32 min_ues = 6;

    // Max number of UEs for complete simulation
    uint32 max_ues = 7;

    // the current number of routes
    uint32 current_routes = 8;
}
